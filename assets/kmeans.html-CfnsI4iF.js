import{_ as o,a as i}from"./kmeans_limitations-D2_avPo0.js";import{_ as c,e as a,i as p,f as n,g as r,h as e,r as u,o as t}from"./app-CPyUwv8V.js";const m={},d={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},k={style:{"vertical-align":"-3.014ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.219ex",height:"6.952ex",role:"img",focusable:"false",viewBox:"0 -1740.7 10262.7 3072.9","aria-hidden":"true"},Q={class:"MathJax",jax:"SVG",style:{position:"relative"}},T={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","aria-hidden":"true"},v={class:"MathJax",jax:"SVG",style:{position:"relative"}},h={style:{"vertical-align":"-0.666ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.204ex",height:"1.666ex",role:"img",focusable:"false",viewBox:"0 -442 974.3 736.2","aria-hidden":"true"},g={class:"MathJax",jax:"SVG",style:{position:"relative"}},b={style:{"vertical-align":"-0.462ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.932ex",height:"1.957ex",role:"img",focusable:"false",viewBox:"0 -661 412 865","aria-hidden":"true"},f={class:"MathJax",jax:"SVG",style:{position:"relative"}},w={style:{"vertical-align":"-0.682ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.386ex",height:"3.082ex",role:"img",focusable:"false",viewBox:"0 -1060.7 1496.5 1362.3","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{position:"relative"}},y={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.781ex",height:"1.52ex",role:"img",focusable:"false",viewBox:"0 -661 345 672","aria-hidden":"true"},M={class:"MathJax",jax:"SVG",style:{position:"relative"}},_={style:{"vertical-align":"-0.462ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.932ex",height:"1.957ex",role:"img",focusable:"false",viewBox:"0 -661 412 865","aria-hidden":"true"},H={class:"MathJax",jax:"SVG",style:{position:"relative"}},L={style:{"vertical-align":"-0.666ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.827ex",height:"1.666ex",role:"img",focusable:"false",viewBox:"0 -442 807.3 736.2","aria-hidden":"true"},K={class:"MathJax",jax:"SVG",style:{position:"relative"}},C={style:{"vertical-align":"-0.462ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.932ex",height:"1.957ex",role:"img",focusable:"false",viewBox:"0 -661 412 865","aria-hidden":"true"};function j(q,s){const l=u("BackToPath");return t(),a("div",null,[s[26]||(s[26]=p('<h1 id="k-means-clustering-algorithm" tabindex="-1"><a class="header-anchor" href="#k-means-clustering-algorithm"><span>K-Means Clustering Algorithm</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span>Key Points of This Section </div><div class="knowledge-card__content"><ul><li>Understand the basic principles and workflow of the K-Means algorithm</li><li>Master methods for selecting K and evaluation metrics</li><li>Learn about K-Means optimization variants and limitations</li><li>Practice applying K-Means in scenarios such as customer segmentation</li></ul></div></div><h2 id="basic-principles-of-k-means" tabindex="-1"><a class="header-anchor" href="#basic-principles-of-k-means"><span>Basic Principles of K-Means</span></a></h2><p>K-Means is a classic unsupervised learning algorithm used to partition data into K distinct clusters. The core idea of the algorithm is that each sample should belong to the cluster whose center (centroid) is closest.</p><h3 id="algorithm-workflow" tabindex="-1"><a class="header-anchor" href="#algorithm-workflow"><span>Algorithm Workflow</span></a></h3><p>The basic steps of the K-Means algorithm are as follows:</p><ol><li><strong>Initialization</strong>: Randomly select K points as the initial centroids</li><li><strong>Assignment</strong>: Assign each sample to the cluster represented by the closest centroid</li><li><strong>Update</strong>: Recalculate the centroids of each cluster (the mean of all points in the cluster)</li><li><strong>Iteration</strong>: Repeat steps 2 and 3 until the centroids no longer change significantly or the maximum number of iterations is reached</li></ol><div class="visualization-container"><div class="visualization-title">K-Means Clustering Process</div><div class="visualization-content"><img src="'+o+'" alt="K-Means Clustering Process"></div><div class="visualization-caption"> Figure: The K-Means clustering process. Starting with randomly initialized centroids, the algorithm iteratively assigns and updates the centroids, eventually converging to a stable cluster division. </div></div><h3 id="mathematical-expression" tabindex="-1"><a class="header-anchor" href="#mathematical-expression"><span>Mathematical Expression</span></a></h3><p>The objective of K-Means is to minimize the sum of squared distances from each sample to the centroid of its assigned cluster, that is, minimize the following objective function:</p>',10)),n("mjx-container",d,[(t(),a("svg",k,s[0]||(s[0]=[p('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(910.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(1966.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(537.8,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(3577.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(377.5,1269.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5187.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5465.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="msubsup" transform="translate(5743.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(605,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(7462.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(8462.8,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9270.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="msup" transform="translate(9548.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(311,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g>',1)]))),s[1]||(s[1]=n("mjx-assistive-mml",{unselectable:"on",display:"block"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("mi",null,"J"),n("mo",null,"="),n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"j"),n("mo",null,"="),n("mn",null,"1")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"k")])]),n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"i"),n("mo",null,"="),n("mn",null,"1")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("msub",null,[n("mi",null,"n"),n("mi",null,"j")])])]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msubsup",null,[n("mi",null,"x"),n("mi",null,"i"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"("),n("mi",null,"j"),n("mo",{stretchy:"false"},")")])]),n("mo",null,"−"),n("msub",null,[n("mi",null,"c"),n("mi",null,"j")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msup",null,[n("mo",{stretchy:"false"},"|"),n("mn",null,"2")])])],-1))]),s[27]||(s[27]=n("p",null,"Where:",-1)),n("ul",null,[n("li",null,[n("mjx-container",Q,[(t(),a("svg",T,s[2]||(s[2]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"})])])],-1)]))),s[3]||(s[3]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"k")])],-1))]),s[4]||(s[4]=e(" is the number of clusters"))]),n("li",null,[n("mjx-container",v,[(t(),a("svg",h,s[5]||(s[5]=[p('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g>',1)]))),s[6]||(s[6]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"n"),n("mi",null,"j")])])],-1))]),s[9]||(s[9]=e(" is the number of samples in the ")),n("mjx-container",g,[(t(),a("svg",b,s[7]||(s[7]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D457",d:"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"})])])],-1)]))),s[8]||(s[8]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"j")])],-1))]),s[10]||(s[10]=e("-th cluster"))]),n("li",null,[n("mjx-container",f,[(t(),a("svg",w,s[11]||(s[11]=[p('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(605,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g>',1)]))),s[12]||(s[12]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msubsup",null,[n("mi",null,"x"),n("mi",null,"i"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"("),n("mi",null,"j"),n("mo",{stretchy:"false"},")")])])])],-1))]),s[17]||(s[17]=e(" is the ")),n("mjx-container",x,[(t(),a("svg",y,s[13]||(s[13]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"})])])],-1)]))),s[14]||(s[14]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"i")])],-1))]),s[18]||(s[18]=e("-th sample in the ")),n("mjx-container",M,[(t(),a("svg",_,s[15]||(s[15]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D457",d:"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"})])])],-1)]))),s[16]||(s[16]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"j")])],-1))]),s[19]||(s[19]=e("-th cluster"))]),n("li",null,[n("mjx-container",H,[(t(),a("svg",L,s[20]||(s[20]=[p('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g>',1)]))),s[21]||(s[21]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"c"),n("mi",null,"j")])])],-1))]),s[24]||(s[24]=e(" is the centroid of the ")),n("mjx-container",K,[(t(),a("svg",C,s[22]||(s[22]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D457",d:"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"})])])],-1)]))),s[23]||(s[23]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"j")])],-1))]),s[25]||(s[25]=e("-th cluster"))])]),s[28]||(s[28]=p(`<div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">💡</span>Did You Know? </div><div class="knowledge-card__content"><p>The K-Means algorithm was first proposed by Stuart Lloyd in 1957 (as a technique for pulse code modulation), but it was officially published in 1982. Despite its simplicity, it remains widely used in various fields and is considered the benchmark for clustering analysis. K-Means is a greedy algorithm that guarantees convergence to a local optimum, but not necessarily the global optimum.</p></div></div><h2 id="k-means-implementation-and-application" tabindex="-1"><a class="header-anchor" href="#k-means-implementation-and-application"><span>K-Means Implementation and Application</span></a></h2><h3 id="basic-implementation" tabindex="-1"><a class="header-anchor" href="#basic-implementation"><span>Basic Implementation</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeans</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_blobs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Generate example data</span></span>
<span class="line">X<span class="token punctuation">,</span> _ <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> cluster_std<span class="token operator">=</span><span class="token number">0.60</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create and train the K-Means model</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">y_kmeans <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Get the cluster centers</span></span>
<span class="line">centers <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>cluster_centers_</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize the clustering result</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y_kmeans<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;K-Means Clustering Result&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Feature 1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Feature 2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="determining-the-optimal-k-value" tabindex="-1"><a class="header-anchor" href="#determining-the-optimal-k-value"><span>Determining the Optimal K Value</span></a></h3><p>Choosing the correct K value is crucial in K-Means. Common methods include the elbow method and silhouette coefficient:</p><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> silhouette_score</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Calculate SSE (sum of squared errors) for different K values</span></span>
<span class="line">sse <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">silhouette_scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">range_k <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> k <span class="token keyword">in</span> range_k<span class="token punctuation">:</span></span>
<span class="line">    kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>k<span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">    sse<span class="token punctuation">.</span>append<span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Calculate silhouette coefficient</span></span>
<span class="line">    <span class="token keyword">if</span> k <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># Silhouette score requires at least 2 clusters</span></span>
<span class="line">        labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>labels_</span>
<span class="line">        silhouette_scores<span class="token punctuation">.</span>append<span class="token punctuation">(</span>silhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Plot elbow chart</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># SSE chart</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>range_k<span class="token punctuation">,</span> sse<span class="token punctuation">,</span> <span class="token string">&#39;bo-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;K Value&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;SSE&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Elbow Method&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Silhouette score chart</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> silhouette_scores<span class="token punctuation">,</span> <span class="token string">&#39;ro-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;K Value&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Silhouette Score&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Silhouette Coefficient Method&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="evaluating-clustering-quality" tabindex="-1"><a class="header-anchor" href="#evaluating-clustering-quality"><span>Evaluating Clustering Quality</span></a></h3><p>In addition to the elbow method and silhouette coefficient, other metrics can also be used to assess clustering quality:</p><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> calinski_harabasz_score<span class="token punctuation">,</span> davies_bouldin_score</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Model with the best K value</span></span>
<span class="line">best_k <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># Assume best K value determined by elbow method</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>best_k<span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Calculate Calinski-Harabasz index (the higher the better)</span></span>
<span class="line">ch_score <span class="token operator">=</span> calinski_harabasz_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Calinski-Harabasz Index: </span><span class="token interpolation"><span class="token punctuation">{</span>ch_score<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Calculate Davies-Bouldin index (the lower the better)</span></span>
<span class="line">db_score <span class="token operator">=</span> davies_bouldin_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Davies-Bouldin Index: </span><span class="token interpolation"><span class="token punctuation">{</span>db_score<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Calculate silhouette coefficient (the closer to 1, the better)</span></span>
<span class="line">silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Silhouette Coefficient: </span><span class="token interpolation"><span class="token punctuation">{</span>silhouette<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h2 id="k-means-application-case" tabindex="-1"><a class="header-anchor" href="#k-means-application-case"><span>K-Means Application Case</span></a></h2><h3 id="customer-segmentation" tabindex="-1"><a class="header-anchor" href="#customer-segmentation"><span>Customer Segmentation</span></a></h3><p>K-Means has wide applications in market segmentation and customer clustering:</p><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load customer data (example)</span></span>
<span class="line"><span class="token comment"># In a real application, use actual customer data</span></span>
<span class="line"><span class="token comment"># Here we create a sample dataset</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">n_customers <span class="token operator">=</span> <span class="token number">200</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create features: Age, Income, and Purchase Frequency</span></span>
<span class="line">age <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line">income <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line">frequency <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create DataFrame</span></span>
<span class="line">customer_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> age<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Income&#39;</span><span class="token punctuation">:</span> income<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">:</span> frequency</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature scaling</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">customer_data_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>customer_data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Apply K-Means clustering</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">customer_data<span class="token punctuation">[</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>customer_data_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Analyze average characteristics of each cluster</span></span>
<span class="line">cluster_summary <span class="token operator">=</span> customer_data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Average characteristics of each customer group:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cluster_summary<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize the results</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Age vs Income</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Age vs Income&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Age vs Purchase Frequency</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Age vs Purchase Frequency&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Income vs Purchase Frequency</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Income vs Purchase Frequency&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create customer profiles for each cluster</span></span>
<span class="line"><span class="token keyword">for</span> cluster <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\nCustomer Group </span><span class="token interpolation"><span class="token punctuation">{</span>cluster<span class="token punctuation">}</span></span><span class="token string"> Profile:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    cluster_data <span class="token operator">=</span> customer_data<span class="token punctuation">[</span>customer_data<span class="token punctuation">[</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> cluster<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Number of customers: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>cluster_data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Average age: </span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string"> years&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Average income: $</span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Average purchase frequency: </span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string"> times/month&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h2 id="k-means-variants-and-optimization" tabindex="-1"><a class="header-anchor" href="#k-means-variants-and-optimization"><span>K-Means Variants and Optimization</span></a></h2><h3 id="k-means" tabindex="-1"><a class="header-anchor" href="#k-means"><span>K-Means++</span></a></h3><p>K-Means++ improves the method of selecting initial centroids, making the clustering results more stable:</p><ol><li>Randomly select the first centroid</li><li>For each subsequent centroid, choose points that are farther from the existing centroids</li><li>This method reduces the sensitivity of K-Means to initial values</li></ol><h3 id="mini-batch-k-means" tabindex="-1"><a class="header-anchor" href="#mini-batch-k-means"><span>Mini-Batch K-Means</span></a></h3><p>For large-scale datasets, Mini-Batch K-Means trains using small batches of data, improving computational efficiency:</p><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> MiniBatchKMeans</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Generate large-scale data</span></span>
<span class="line">X_large<span class="token punctuation">,</span> _ <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> cluster_std<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Compare the performance of K-Means and Mini-Batch K-Means</span></span>
<span class="line">start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_large<span class="token punctuation">)</span></span>
<span class="line">kmeans_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;K-Means runtime: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string"> seconds&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">mbk <span class="token operator">=</span> MiniBatchKMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">mbk<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_large<span class="token punctuation">)</span></span>
<span class="line">mbk_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Mini-Batch K-Means runtime: </span><span class="token interpolation"><span class="token punctuation">{</span>mbk_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string"> seconds&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Speedup: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_time<span class="token operator">/</span>mbk_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">x&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Compare clustering results</span></span>
<span class="line">kmeans_labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>labels_</span>
<span class="line">mbk_labels <span class="token operator">=</span> mbk<span class="token punctuation">.</span>labels_</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Calculate silhouette scores for both methods</span></span>
<span class="line">kmeans_silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X_large<span class="token punctuation">,</span> kmeans_labels<span class="token punctuation">)</span></span>
<span class="line">mbk_silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X_large<span class="token punctuation">,</span> mbk_labels<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;K-Means silhouette score: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_silhouette<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Mini-Batch K-Means silhouette score: </span><span class="token interpolation"><span class="token punctuation">{</span>mbk_silhouette<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="other-variants" tabindex="-1"><a class="header-anchor" href="#other-variants"><span>Other Variants</span></a></h3><ul><li><strong>K-Medoids</strong>: Uses actual data points as cluster centers, more robust to outliers</li><li><strong>K-Means++</strong>: Optimizes the initial centroid selection</li><li><strong>Fuzzy K-Means</strong>: Allows samples to belong to multiple clusters with different degrees of membership</li><li><strong>Spherical K-Means</strong>: Suitable for high-dimensional sparse data, such as text</li></ul><h2 id="limitations-of-k-means" tabindex="-1"><a class="header-anchor" href="#limitations-of-k-means"><span>Limitations of K-Means</span></a></h2><p>Although K-Means is simple and efficient, it has some inherent limitations:</p><ol><li><strong>Requires pre-specification of K</strong>: Choosing the correct K can be difficult</li><li><strong>Sensitive to initial centroids</strong>: Different initializations may lead to different results</li><li><strong>Assumes clusters are convex and similar in size</strong>: Not suitable for identifying complex-shaped clusters</li><li><strong>Sensitive to outliers</strong>: Outliers can significantly affect the centroid position</li><li><strong>Only suitable for numerical features</strong>: Categorical features require special handling</li></ol><div class="visualization-container"><div class="visualization-title">Limitations of K-Means</div><div class="visualization-content"><img src="`+i+'" alt="Limitations of K-Means"></div><div class="visualization-caption"> Figure: Limitations of K-Means on non-convex clusters. </div></div><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">⚠️</span>Common Pitfalls </div><div class="knowledge-card__content"><ul><li><strong>Neglecting Feature Scaling</strong>: Failure to standardize features leads to high-variance features dominating the clustering result</li><li><strong>Blindly Choosing K</strong>: Failing to validate the K value using methods like the elbow method</li><li><strong>Over-interpreting Clustering Results</strong>: Treating clustering results as absolute truths rather than tools for data exploration</li><li><strong>Neglecting Data Preprocessing</strong>: Ignoring outliers and missing values, which affect clustering quality</li></ul></div></div><h2 id="summary-and-reflection" tabindex="-1"><a class="header-anchor" href="#summary-and-reflection"><span>Summary and Reflection</span></a></h2><p>K-Means is a simple yet powerful clustering algorithm. Despite its limitations, it is still highly effective in many real-world applications.</p><h3 id="key-takeaways" tabindex="-1"><a class="header-anchor" href="#key-takeaways"><span>Key Takeaways</span></a></h3><ul><li>K-Means divides data into K clusters through iterative optimization</li><li>The algorithm&#39;s objective is to minimize the sum of squared distances from samples to centroids</li><li>Selecting the appropriate K value is crucial for good clustering results</li><li>Variants like K-Means++ improve initial centroid selection</li><li>Mini-Batch K-Means provides computational efficiency for large-scale data</li></ul><h3 id="reflection-questions" tabindex="-1"><a class="header-anchor" href="#reflection-questions"><span>Reflection Questions</span></a></h3><ol><li>In which cases might K-Means not be the best choice?</li><li>How can we address K-Means&#39; sensitivity to outliers?</li><li>Apart from the elbow method and silhouette coefficient, what other methods can be used to determine the optimal K?</li></ol>',34)),r(l),s[29]||(s[29]=n("div",{class:"practice-link"},[n("a",{href:"/projects/clustering.html",class:"button"},"Go to Practice Project")],-1))])}const D=c(m,[["render",j],["__file","kmeans.html.vue"]]),S=JSON.parse('{"path":"/en/core/clustering/kmeans.html","title":"K-Means Clustering Algorithm","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Basic Principles of K-Means","slug":"basic-principles-of-k-means","link":"#basic-principles-of-k-means","children":[{"level":3,"title":"Algorithm Workflow","slug":"algorithm-workflow","link":"#algorithm-workflow","children":[]},{"level":3,"title":"Mathematical Expression","slug":"mathematical-expression","link":"#mathematical-expression","children":[]}]},{"level":2,"title":"K-Means Implementation and Application","slug":"k-means-implementation-and-application","link":"#k-means-implementation-and-application","children":[{"level":3,"title":"Basic Implementation","slug":"basic-implementation","link":"#basic-implementation","children":[]},{"level":3,"title":"Determining the Optimal K Value","slug":"determining-the-optimal-k-value","link":"#determining-the-optimal-k-value","children":[]},{"level":3,"title":"Evaluating Clustering Quality","slug":"evaluating-clustering-quality","link":"#evaluating-clustering-quality","children":[]}]},{"level":2,"title":"K-Means Application Case","slug":"k-means-application-case","link":"#k-means-application-case","children":[{"level":3,"title":"Customer Segmentation","slug":"customer-segmentation","link":"#customer-segmentation","children":[]}]},{"level":2,"title":"K-Means Variants and Optimization","slug":"k-means-variants-and-optimization","link":"#k-means-variants-and-optimization","children":[{"level":3,"title":"K-Means++","slug":"k-means","link":"#k-means","children":[]},{"level":3,"title":"Mini-Batch K-Means","slug":"mini-batch-k-means","link":"#mini-batch-k-means","children":[]},{"level":3,"title":"Other Variants","slug":"other-variants","link":"#other-variants","children":[]}]},{"level":2,"title":"Limitations of K-Means","slug":"limitations-of-k-means","link":"#limitations-of-k-means","children":[]},{"level":2,"title":"Summary and Reflection","slug":"summary-and-reflection","link":"#summary-and-reflection","children":[{"level":3,"title":"Key Takeaways","slug":"key-takeaways","link":"#key-takeaways","children":[]},{"level":3,"title":"Reflection Questions","slug":"reflection-questions","link":"#reflection-questions","children":[]}]}],"git":{},"filePathRelative":"en/core/clustering/kmeans.md"}');export{D as comp,S as data};
