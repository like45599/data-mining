import{_ as s,e as a,i as t,o as p}from"./app-CztZx2qC.js";const e={};function o(l,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="sales-forecasting" tabindex="-1"><a class="header-anchor" href="#sales-forecasting"><span>Sales Forecasting</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">ðŸ“š</span> Project Overview </div><div class="knowledge-card__content"><ul><li><strong>Difficulty</strong>: Intermediate</li><li><strong>Type</strong>: Regression - Intermediate</li><li><strong>Skills</strong>: Time series analysis, feature engineering, regression models</li><li><strong>Related Knowledge Module</strong>: <a href="/en/core/regression/linear-regression.html">Regression Analysis</a></li></ul></div></div><h2 id="project-background" tabindex="-1"><a class="header-anchor" href="#project-background"><span>Project Background</span></a></h2><p>Sales forecasting is a key task in business operations. Accurate forecasting can help businesses optimize inventory management, human resources planning, and marketing strategies. By analyzing historical sales data and related factors (such as promotional activities, seasonality, price changes, etc.), we can build models to predict future sales performance.</p><p>In this project, we will use retail sales data to build a sales forecasting model, helping businesses make more informed decisions.</p><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">ðŸ’¡</span> Did you know? </div><div class="knowledge-card__content"><p>Large retailers like Walmart handle millions of transactions every day. They use advanced forecasting models to optimize inventory and pricing. Accurate sales forecasting is estimated to save large retailers millions of dollars in inventory costs and significantly reduce product waste annually.</p></div></div><h2 id="dataset-introduction" tabindex="-1"><a class="header-anchor" href="#dataset-introduction"><span>Dataset Introduction</span></a></h2><p>We will use a retail sales dataset containing daily sales records for a supermarket chain over two years. The dataset includes the following features:</p><ul><li>Date: Sales date</li><li>Store: Store ID</li><li>Item: Item ID</li><li>Sales: Quantity sold</li><li>Price: Item price</li><li>Promotion: Whether there was a promotion (1 for yes, 0 for no)</li><li>Holiday: Whether it was a holiday (1 for yes, 0 for no)</li><li>Temperature: Temperature on the day</li><li>Fuel_Price: Fuel price</li><li>CPI: Consumer Price Index</li><li>Unemployment: Unemployment rate</li></ul><p>The target variable is Sales (quantity sold). Our task is to forecast the sales for a future period.</p><h2 id="project-goals" tabindex="-1"><a class="header-anchor" href="#project-goals"><span>Project Goals</span></a></h2><ol><li>Build a regression model that can accurately predict sales</li><li>Identify the key factors affecting sales</li><li>Analyze the impact of seasonality and trends on sales</li><li>Evaluate the performance of different forecasting methods</li><li>Provide visualizations and business recommendations based on sales forecasts</li></ol><h2 id="implementation-steps" tabindex="-1"><a class="header-anchor" href="#implementation-steps"><span>Implementation Steps</span></a></h2><h3 id="_1-data-exploration-and-visualization" tabindex="-1"><a class="header-anchor" href="#_1-data-exploration-and-visualization"><span>1. Data Exploration and Visualization</span></a></h3><p>First, we need to understand the basic features and distributions of the data:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestRegressor</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error<span class="token punctuation">,</span> r2_score<span class="token punctuation">,</span> mean_absolute_error</span>
<span class="line"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm</span>
<span class="line"><span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>tsa<span class="token punctuation">.</span>seasonal <span class="token keyword">import</span> seasonal_decompose</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load the data</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;retail_sales.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Convert the Date column to datetime type</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View basic data information</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Check for missing values</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize the sales trend</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sales_by_date <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>sales_by_date<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sales_by_date<span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Total Sales Trend by Date&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View the seasonality pattern in sales</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sales_by_month <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>month<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>sales_by_month<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sales_by_month<span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Average Monthly Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Month&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Average Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View the impact of promotions on sales</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Promotion&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>df<span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Impact of Promotion on Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Promotion&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View the impact of temperature on sales</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Temperature vs Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-feature-engineering" tabindex="-1"><a class="header-anchor" href="#_2-feature-engineering"><span>2. Feature Engineering</span></a></h3><p>Create new features that will assist with forecasting:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Extract time features from the Date column</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;Year&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;Month&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>month</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;Day&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>day</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;DayOfWeek&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>dayofweek</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;WeekOfYear&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>isocalendar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>week</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create season features</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;Season&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Month&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">else</span> </span>
<span class="line">                                          <span class="token number">2</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">else</span> </span>
<span class="line">                                          <span class="token number">3</span> <span class="token keyword">if</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">else</span> <span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create weekend flag feature</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;IsWeekend&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;DayOfWeek&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token keyword">if</span> x <span class="token operator">&gt;=</span> <span class="token number">5</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create lag features (previous day, previous week sales)</span></span>
<span class="line">df_lag <span class="token operator">=</span> df<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">df_lag <span class="token operator">=</span> df_lag<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Store&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">df_lag<span class="token punctuation">[</span><span class="token string">&#39;Sales_Lag1&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_lag<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Store&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">df_lag<span class="token punctuation">[</span><span class="token string">&#39;Sales_Lag7&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_lag<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Store&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Remove rows with NaN values (due to lag feature creation)</span></span>
<span class="line">df_lag <span class="token operator">=</span> df_lag<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View new features</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df_lag<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-time-series-decomposition" tabindex="-1"><a class="header-anchor" href="#_3-time-series-decomposition"><span>3. Time Series Decomposition</span></a></h3><p>Analyze the trend, seasonality, and residuals of the sales data:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Select sales data for a specific store and item for time series decomposition</span></span>
<span class="line">store_item_sales <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Store&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Item&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Ensure the index is evenly spaced</span></span>
<span class="line">store_item_sales <span class="token operator">=</span> store_item_sales<span class="token punctuation">.</span>asfreq<span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Time series decomposition</span></span>
<span class="line">decomposition <span class="token operator">=</span> seasonal_decompose<span class="token punctuation">(</span>store_item_sales<span class="token punctuation">,</span> model<span class="token operator">=</span><span class="token string">&#39;multiplicative&#39;</span><span class="token punctuation">,</span> period<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize decomposition results</span></span>
<span class="line">fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>ax1<span class="token punctuation">,</span> ax2<span class="token punctuation">,</span> ax3<span class="token punctuation">,</span> ax4<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">decomposition<span class="token punctuation">.</span>observed<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ax<span class="token operator">=</span>ax1<span class="token punctuation">)</span></span>
<span class="line">ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Observed&#39;</span><span class="token punctuation">)</span></span>
<span class="line">decomposition<span class="token punctuation">.</span>trend<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ax<span class="token operator">=</span>ax2<span class="token punctuation">)</span></span>
<span class="line">ax2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Trend&#39;</span><span class="token punctuation">)</span></span>
<span class="line">decomposition<span class="token punctuation">.</span>seasonal<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ax<span class="token operator">=</span>ax3<span class="token punctuation">)</span></span>
<span class="line">ax3<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Seasonality&#39;</span><span class="token punctuation">)</span></span>
<span class="line">decomposition<span class="token punctuation">.</span>resid<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>ax<span class="token operator">=</span>ax4<span class="token punctuation">)</span></span>
<span class="line">ax4<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Residual&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-model-training-and-evaluation" tabindex="-1"><a class="header-anchor" href="#_4-model-training-and-evaluation"><span>4. Model Training and Evaluation</span></a></h3><p>We will try multiple regression models and compare their performance:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Prepare features and target variable</span></span>
<span class="line">X <span class="token operator">=</span> df_lag<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> df_lag<span class="token punctuation">[</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Convert categorical variables to dummy variables</span></span>
<span class="line">X <span class="token operator">=</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>X<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Store&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Item&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Season&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> drop_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Split into training and testing sets (time-based split)</span></span>
<span class="line">train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span></span>
<span class="line">X_train<span class="token punctuation">,</span> X_test <span class="token operator">=</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature scaling</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">X_train_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span></span>
<span class="line">X_test_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define evaluation function</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">evaluate_model</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">,</span> model_name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Train the model</span></span>
<span class="line">    model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Predict</span></span>
<span class="line">    y_train_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span></span>
<span class="line">    y_test_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Calculate evaluation metrics</span></span>
<span class="line">    train_rmse <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> y_train_pred<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    test_rmse <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    train_r2 <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> y_train_pred<span class="token punctuation">)</span></span>
<span class="line">    test_r2 <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span></span>
<span class="line">    test_mae <span class="token operator">=</span> mean_absolute_error<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>model_name<span class="token punctuation">}</span></span><span class="token string">:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Training RMSE: </span><span class="token interpolation"><span class="token punctuation">{</span>train_rmse<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test RMSE: </span><span class="token interpolation"><span class="token punctuation">{</span>test_rmse<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Training RÂ²: </span><span class="token interpolation"><span class="token punctuation">{</span>train_r2<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test RÂ²: </span><span class="token interpolation"><span class="token punctuation">{</span>test_r2<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test MAE: </span><span class="token interpolation"><span class="token punctuation">{</span>test_mae<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> model<span class="token punctuation">,</span> y_test_pred</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Linear Regression</span></span>
<span class="line">lr_model<span class="token punctuation">,</span> lr_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train_scaled<span class="token punctuation">,</span> X_test_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">,</span> <span class="token string">&quot;Linear Regression Model&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Random Forest Regression</span></span>
<span class="line">rf_model<span class="token punctuation">,</span> rf_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>RandomForestRegressor<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">                                  X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">,</span> <span class="token string">&quot;Random Forest Regression Model&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-feature-importance-analysis" tabindex="-1"><a class="header-anchor" href="#_5-feature-importance-analysis"><span>5. Feature Importance Analysis</span></a></h3><p>Understand which factors have the most impact on sales:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Analyze feature importance using the Random Forest model</span></span>
<span class="line">feature_importance <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;Feature&#39;</span><span class="token punctuation">:</span> X<span class="token punctuation">.</span>columns<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Importance&#39;</span><span class="token punctuation">:</span> rf_model<span class="token punctuation">.</span>feature_importances_</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">feature_importance <span class="token operator">=</span> feature_importance<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;Importance&#39;</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Display the top 15 most important features</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Importance&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Feature&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>feature_importance<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Feature Importance (Top 15)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-prediction-visualization" tabindex="-1"><a class="header-anchor" href="#_6-prediction-visualization"><span>6. Prediction Visualization</span></a></h3><p>Visualize the comparison between model predictions and actual values:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Visualize prediction results</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>y_test<span class="token punctuation">.</span>values<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Actual Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>rf_pred<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Predicted Sales&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Random Forest Model: Actual Sales vs Predicted Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Sample Index&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Sales&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Prediction error analysis</span></span>
<span class="line">errors <span class="token operator">=</span> y_test <span class="token operator">-</span> rf_pred</span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>errors<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Prediction Error Distribution&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Prediction Error&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="advanced-challenges" tabindex="-1"><a class="header-anchor" href="#advanced-challenges"><span>Advanced Challenges</span></a></h2><p>If you have completed the basic tasks, you can try the following advanced challenges:</p><ol><li><strong>Advanced Time Series Models</strong>: Try using ARIMA, SARIMA, or Prophet models specifically designed for time series</li><li><strong>Multi-step Prediction</strong>: Build models that forecast sales for multiple future time points</li><li><strong>Ensemble Forecasting</strong>: Combine predictions from multiple models to improve forecasting accuracy</li><li><strong>Feature Selection</strong>: Use feature selection techniques to find the most predictive subset of features</li><li><strong>Cross-Validation</strong>: Implement time series cross-validation to get more robust model evaluations</li></ol><h2 id="conclusion-and-reflection" tabindex="-1"><a class="header-anchor" href="#conclusion-and-reflection"><span>Conclusion and Reflection</span></a></h2><p>Through this project, we learned how to build a sales forecasting model, from data exploration to model evaluation. We found that promotional activities, seasonality, and historical sales data significantly impact the prediction of future sales.</p><p>In practice, sales forecasting models help businesses optimize inventory management, reduce inventory costs, and minimize product waste while ensuring product availability to meet customer demand. Additionally, accurate sales forecasts can help businesses develop more effective marketing strategies and promotion plans.</p><h3 id="reflective-questions" tabindex="-1"><a class="header-anchor" href="#reflective-questions"><span>Reflective Questions</span></a></h3><ol><li>Besides the features we used, what other factors might affect sales? How can we obtain this data?</li><li>In what situations might sales forecasting models fail? How can we address these challenges?</li><li>How can sales forecasting results be translated into specific business decisions and actions?</li></ol><div class="practice-link"><a href="/en/projects/regression/anomaly-detection.html" class="button">Next Project: Anomaly Detection and Prediction</a></div>`,40)]))}const c=s(e,[["render",o],["__file","sales-forecast.html.vue"]]),u=JSON.parse('{"path":"/en/projects/regression/sales-forecast.html","title":"Sales Forecasting","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Project Background","slug":"project-background","link":"#project-background","children":[]},{"level":2,"title":"Dataset Introduction","slug":"dataset-introduction","link":"#dataset-introduction","children":[]},{"level":2,"title":"Project Goals","slug":"project-goals","link":"#project-goals","children":[]},{"level":2,"title":"Implementation Steps","slug":"implementation-steps","link":"#implementation-steps","children":[{"level":3,"title":"1. Data Exploration and Visualization","slug":"_1-data-exploration-and-visualization","link":"#_1-data-exploration-and-visualization","children":[]},{"level":3,"title":"2. Feature Engineering","slug":"_2-feature-engineering","link":"#_2-feature-engineering","children":[]},{"level":3,"title":"3. Time Series Decomposition","slug":"_3-time-series-decomposition","link":"#_3-time-series-decomposition","children":[]},{"level":3,"title":"4. Model Training and Evaluation","slug":"_4-model-training-and-evaluation","link":"#_4-model-training-and-evaluation","children":[]},{"level":3,"title":"5. Feature Importance Analysis","slug":"_5-feature-importance-analysis","link":"#_5-feature-importance-analysis","children":[]},{"level":3,"title":"6. Prediction Visualization","slug":"_6-prediction-visualization","link":"#_6-prediction-visualization","children":[]}]},{"level":2,"title":"Advanced Challenges","slug":"advanced-challenges","link":"#advanced-challenges","children":[]},{"level":2,"title":"Conclusion and Reflection","slug":"conclusion-and-reflection","link":"#conclusion-and-reflection","children":[{"level":3,"title":"Reflective Questions","slug":"reflective-questions","link":"#reflective-questions","children":[]}]}],"git":{},"filePathRelative":"en/projects/regression/sales-forecast.md"}');export{c as comp,u as data};
