import{_ as o,a as c}from"./kmeans_limitations-D2_avPo0.js";import{_ as i,e as a,i as t,f as n,g as u,h as e,r,o as p}from"./app-CPyUwv8V.js";const k={},d={class:"MathJax",jax:"SVG",display:"true",style:{position:"relative"}},m={style:{"vertical-align":"-3.014ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.219ex",height:"6.952ex",role:"img",focusable:"false",viewBox:"0 -1740.7 10262.7 3072.9","aria-hidden":"true"},Q={class:"MathJax",jax:"SVG",style:{position:"relative"}},T={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","aria-hidden":"true"},v={class:"MathJax",jax:"SVG",style:{position:"relative"}},b={style:{"vertical-align":"-0.666ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.204ex",height:"1.666ex",role:"img",focusable:"false",viewBox:"0 -442 974.3 736.2","aria-hidden":"true"},g={class:"MathJax",jax:"SVG",style:{position:"relative"}},h={style:{"vertical-align":"-0.682ex"},xmlns:"http://www.w3.org/2000/svg",width:"3.386ex",height:"3.082ex",role:"img",focusable:"false",viewBox:"0 -1060.7 1496.5 1362.3","aria-hidden":"true"},_={class:"MathJax",jax:"SVG",style:{position:"relative"}},f={style:{"vertical-align":"-0.666ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.827ex",height:"1.666ex",role:"img",focusable:"false",viewBox:"0 -442 807.3 736.2","aria-hidden":"true"};function x(M,s){const l=r("BackToPath");return p(),a("div",null,[s[14]||(s[14]=t('<h1 id="k-means聚类算法" tabindex="-1"><a class="header-anchor" href="#k-means聚类算法"><span>K-Means聚类算法</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span>本节要点 </div><div class="knowledge-card__content"><ul><li>理解K-Means算法的基本原理和工作流程</li><li>掌握K值选择的方法和评估指标</li><li>学习K-Means的优化变体和局限性</li><li>实践K-Means在客户分群等场景中的应用</li></ul></div></div><h2 id="k-means基本原理" tabindex="-1"><a class="header-anchor" href="#k-means基本原理"><span>K-Means基本原理</span></a></h2><p>K-Means是一种经典的无监督学习算法，用于将数据划分为K个不同的簇。算法的核心思想是：每个样本应该属于距离最近的簇中心（质心）所代表的簇。</p><h3 id="算法流程" tabindex="-1"><a class="header-anchor" href="#算法流程"><span>算法流程</span></a></h3><p>K-Means算法的基本步骤如下：</p><ol><li><strong>初始化</strong>：随机选择K个点作为初始质心</li><li><strong>分配</strong>：将每个样本分配到距离最近的质心所代表的簇</li><li><strong>更新</strong>：重新计算每个簇的质心（簇中所有点的均值）</li><li><strong>迭代</strong>：重复步骤2和3，直到质心基本不再变化或达到最大迭代次数</li></ol><div class="visualization-container"><div class="visualization-title">K-Means聚类过程</div><div class="visualization-content"><img src="'+o+'" alt="K-Means聚类过程"></div><div class="visualization-caption"> 图: K-Means聚类过程。从随机初始化质心开始，通过迭代分配和更新步骤，最终收敛到稳定的簇划分。 </div></div><h3 id="数学表达" tabindex="-1"><a class="header-anchor" href="#数学表达"><span>数学表达</span></a></h3><p>K-Means算法的目标是最小化所有样本到其所属簇质心的距离平方和，即最小化以下目标函数：</p>',10)),n("mjx-container",d,[(p(),a("svg",m,s[0]||(s[0]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(910.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(1966.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(124.5,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1190,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(537.8,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="munderover" transform="translate(3577.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(377.5,1269.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5187.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5465.9,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="msubsup" transform="translate(5743.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(605,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(7462.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(8462.8,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9270.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="msup" transform="translate(9548.1,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mn" transform="translate(311,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g>',1)]))),s[1]||(s[1]=n("mjx-assistive-mml",{unselectable:"on",display:"block"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("mi",null,"J"),n("mo",null,"="),n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"j"),n("mo",null,"="),n("mn",null,"1")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"k")])]),n("munderover",null,[n("mo",{"data-mjx-texclass":"OP"},"∑"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mi",null,"i"),n("mo",null,"="),n("mn",null,"1")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("msub",null,[n("mi",null,"n"),n("mi",null,"j")])])]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msubsup",null,[n("mi",null,"x"),n("mi",null,"i"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"("),n("mi",null,"j"),n("mo",{stretchy:"false"},")")])]),n("mo",null,"−"),n("msub",null,[n("mi",null,"c"),n("mi",null,"j")]),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"|")]),n("msup",null,[n("mo",{stretchy:"false"},"|"),n("mn",null,"2")])])],-1))]),s[15]||(s[15]=n("p",null,"其中：",-1)),n("ul",null,[n("li",null,[n("mjx-container",Q,[(p(),a("svg",T,s[2]||(s[2]=[n("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[n("g",{"data-mml-node":"math"},[n("g",{"data-mml-node":"mi"},[n("path",{"data-c":"1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"})])])],-1)]))),s[3]||(s[3]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("mi",null,"k")])],-1))]),s[4]||(s[4]=e(" 是簇的数量"))]),n("li",null,[n("mjx-container",v,[(p(),a("svg",b,s[5]||(s[5]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(633,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g>',1)]))),s[6]||(s[6]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"n"),n("mi",null,"j")])])],-1))]),s[7]||(s[7]=e(" 是第j个簇中的样本数"))]),n("li",null,[n("mjx-container",g,[(p(),a("svg",h,s[8]||(s[8]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,530.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(801,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mi" transform="translate(605,-293.8) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g>',1)]))),s[9]||(s[9]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msubsup",null,[n("mi",null,"x"),n("mi",null,"i"),n("mrow",{"data-mjx-texclass":"ORD"},[n("mo",{stretchy:"false"},"("),n("mi",null,"j"),n("mo",{stretchy:"false"},")")])])])],-1))]),s[10]||(s[10]=e(" 是第j个簇中的第i个样本"))]),n("li",null,[n("mjx-container",_,[(p(),a("svg",f,s[11]||(s[11]=[t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g>',1)]))),s[12]||(s[12]=n("mjx-assistive-mml",{unselectable:"on",display:"inline"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("msub",null,[n("mi",null,"c"),n("mi",null,"j")])])],-1))]),s[13]||(s[13]=e(" 是第j个簇的质心"))])]),s[16]||(s[16]=t(`<div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">💡</span>你知道吗？ </div><div class="knowledge-card__content"><p>K-Means算法最早由Stuart Lloyd在1957年提出（作为脉冲编码调制的一种技术），但直到1982年才正式发表。尽管算法简单，但它在各个领域仍然广泛应用，是聚类分析的基准算法。K-Means是一种贪心算法，它保证收敛到局部最优解，但不一定是全局最优解。</p></div></div><h2 id="k-means实现与应用" tabindex="-1"><a class="header-anchor" href="#k-means实现与应用"><span>K-Means实现与应用</span></a></h2><h3 id="基本实现" tabindex="-1"><a class="header-anchor" href="#基本实现"><span>基本实现</span></a></h3><div class="code-example"><div class="code-example__title">代码示例</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeans</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_blobs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成示例数据</span></span>
<span class="line">X<span class="token punctuation">,</span> _ <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> cluster_std<span class="token operator">=</span><span class="token number">0.60</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建并训练K-Means模型</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">y_kmeans <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取簇中心</span></span>
<span class="line">centers <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>cluster_centers_</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 可视化聚类结果</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y_kmeans<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;K-Means聚类结果&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;特征1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;特征2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="确定最佳k值" tabindex="-1"><a class="header-anchor" href="#确定最佳k值"><span>确定最佳K值</span></a></h3><p>选择合适的K值是K-Means算法的关键。常用的方法包括肘部法则和轮廓系数：</p><div class="code-example"><div class="code-example__title">代码示例</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> silhouette_score</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算不同K值的SSE（误差平方和）</span></span>
<span class="line">sse <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">silhouette_scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">range_k <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> k <span class="token keyword">in</span> range_k<span class="token punctuation">:</span></span>
<span class="line">    kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>k<span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">    sse<span class="token punctuation">.</span>append<span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 计算轮廓系数</span></span>
<span class="line">    <span class="token keyword">if</span> k <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># 轮廓系数需要至少2个簇</span></span>
<span class="line">        labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>labels_</span>
<span class="line">        silhouette_scores<span class="token punctuation">.</span>append<span class="token punctuation">(</span>silhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 绘制肘部图</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># SSE图</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>range_k<span class="token punctuation">,</span> sse<span class="token punctuation">,</span> <span class="token string">&#39;bo-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;K值&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;SSE&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;肘部法则&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 轮廓系数图</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> silhouette_scores<span class="token punctuation">,</span> <span class="token string">&#39;ro-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;K值&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;轮廓系数&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;轮廓系数法&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="评估聚类质量" tabindex="-1"><a class="header-anchor" href="#评估聚类质量"><span>评估聚类质量</span></a></h3><p>除了肘部法则和轮廓系数外，还可以使用其他指标评估聚类质量：</p><div class="code-example"><div class="code-example__title">代码示例</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> calinski_harabasz_score<span class="token punctuation">,</span> davies_bouldin_score</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 选择最佳K值后的模型</span></span>
<span class="line">best_k <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># 假设通过肘部法则确定的最佳K值</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>best_k<span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算Calinski-Harabasz指数（越高越好）</span></span>
<span class="line">ch_score <span class="token operator">=</span> calinski_harabasz_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Calinski-Harabasz指数: </span><span class="token interpolation"><span class="token punctuation">{</span>ch_score<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算Davies-Bouldin指数（越低越好）</span></span>
<span class="line">db_score <span class="token operator">=</span> davies_bouldin_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Davies-Bouldin指数: </span><span class="token interpolation"><span class="token punctuation">{</span>db_score<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算轮廓系数（越接近1越好）</span></span>
<span class="line">silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> labels<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;轮廓系数: </span><span class="token interpolation"><span class="token punctuation">{</span>silhouette<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h2 id="k-means的应用案例" tabindex="-1"><a class="header-anchor" href="#k-means的应用案例"><span>K-Means的应用案例</span></a></h2><h3 id="客户分群" tabindex="-1"><a class="header-anchor" href="#客户分群"><span>客户分群</span></a></h3><p>K-Means在市场细分和客户分群中有广泛应用：</p><div class="code-example"><div class="code-example__title">代码示例</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载客户数据（示例）</span></span>
<span class="line"><span class="token comment"># 实际应用中，可以使用真实的客户数据</span></span>
<span class="line"><span class="token comment"># 这里我们创建一个示例数据集</span></span>
<span class="line">np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">n_customers <span class="token operator">=</span> <span class="token number">200</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建特征：年龄、收入和消费频率</span></span>
<span class="line">age <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line">income <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line">frequency <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> n_customers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建DataFrame</span></span>
<span class="line">customer_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> age<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Income&#39;</span><span class="token punctuation">:</span> income<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">:</span> frequency</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 特征缩放</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">customer_data_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>customer_data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 应用K-Means聚类</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">customer_data<span class="token punctuation">[</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>customer_data_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分析各簇的特征</span></span>
<span class="line">cluster_summary <span class="token operator">=</span> customer_data<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;各客户群体特征平均值:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cluster_summary<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 可视化结果</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 年龄vs收入</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;年龄 vs 收入&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 年龄vs消费频率</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;年龄 vs 消费频率&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 收入vs消费频率</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>customer_data<span class="token punctuation">,</span> palette<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;收入 vs 消费频率&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 为每个簇创建客户画像</span></span>
<span class="line"><span class="token keyword">for</span> cluster <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n客户群体 </span><span class="token interpolation"><span class="token punctuation">{</span>cluster<span class="token punctuation">}</span></span><span class="token string"> 画像:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    cluster_data <span class="token operator">=</span> customer_data<span class="token punctuation">[</span>customer_data<span class="token punctuation">[</span><span class="token string">&#39;Cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> cluster<span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;数量: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>cluster_data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> 客户&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均年龄: </span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string"> 岁&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均收入: $</span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Income&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均消费频率: </span><span class="token interpolation"><span class="token punctuation">{</span>cluster_data<span class="token punctuation">[</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string"> 次/月&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h2 id="k-means的变体与优化" tabindex="-1"><a class="header-anchor" href="#k-means的变体与优化"><span>K-Means的变体与优化</span></a></h2><h3 id="k-means" tabindex="-1"><a class="header-anchor" href="#k-means"><span>K-Means++</span></a></h3><p>K-Means++改进了初始质心的选择方法，使聚类结果更稳定：</p><ol><li>随机选择第一个质心</li><li>对于每个后续质心，选择与已有质心距离较远的点</li><li>这种方法减少了K-Means对初始值敏感的问题</li></ol><h3 id="mini-batch-k-means" tabindex="-1"><a class="header-anchor" href="#mini-batch-k-means"><span>Mini-Batch K-Means</span></a></h3><p>对于大规模数据集，Mini-Batch K-Means使用小批量数据进行训练，提高计算效率：</p><div class="code-example"><div class="code-example__title">代码示例</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> MiniBatchKMeans</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成大规模数据</span></span>
<span class="line">X_large<span class="token punctuation">,</span> _ <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> cluster_std<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 比较K-Means和Mini-Batch K-Means的性能</span></span>
<span class="line">start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_large<span class="token punctuation">)</span></span>
<span class="line">kmeans_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;K-Means运行时间: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">秒&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">mbk <span class="token operator">=</span> MiniBatchKMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">mbk<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_large<span class="token punctuation">)</span></span>
<span class="line">mbk_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Mini-Batch K-Means运行时间: </span><span class="token interpolation"><span class="token punctuation">{</span>mbk_time<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">秒&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;速度提升: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_time<span class="token operator">/</span>mbk_time<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">倍&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 比较聚类结果</span></span>
<span class="line">kmeans_labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>labels_</span>
<span class="line">mbk_labels <span class="token operator">=</span> mbk<span class="token punctuation">.</span>labels_</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算两种方法的轮廓系数</span></span>
<span class="line">kmeans_silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X_large<span class="token punctuation">,</span> kmeans_labels<span class="token punctuation">)</span></span>
<span class="line">mbk_silhouette <span class="token operator">=</span> silhouette_score<span class="token punctuation">(</span>X_large<span class="token punctuation">,</span> mbk_labels<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;K-Means轮廓系数: </span><span class="token interpolation"><span class="token punctuation">{</span>kmeans_silhouette<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Mini-Batch K-Means轮廓系数: </span><span class="token interpolation"><span class="token punctuation">{</span>mbk_silhouette<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="其他变体" tabindex="-1"><a class="header-anchor" href="#其他变体"><span>其他变体</span></a></h3><ul><li><strong>K-Medoids</strong>：使用实际数据点作为簇中心，对异常值更鲁棒</li><li><strong>K-Means++</strong>：优化初始质心选择</li><li><strong>Fuzzy K-Means</strong>：允许样本属于多个簇，每个簇有不同的隶属度</li><li><strong>Spherical K-Means</strong>：适用于文本等高维稀疏数据</li></ul><h2 id="k-means的局限性" tabindex="-1"><a class="header-anchor" href="#k-means的局限性"><span>K-Means的局限性</span></a></h2><p>尽管K-Means简单高效，但它有一些固有的局限性：</p><ol><li><strong>需要预先指定K值</strong>：选择合适的K值可能困难</li><li><strong>对初始质心敏感</strong>：不同初始值可能导致不同结果</li><li><strong>假设簇是凸形且大小相似</strong>：不适合识别复杂形状的簇</li><li><strong>对异常值敏感</strong>：异常值会显著影响质心位置</li><li><strong>仅适用于数值特征</strong>：类别特征需要特殊处理</li></ol><div class="visualization-container"><div class="visualization-title">K-Means的局限性</div><div class="visualization-content"><img src="`+c+'" alt="K-Means的局限性"></div><div class="visualization-caption"> 图: K-Means在非凸形簇上的局限性。 </div></div><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">⚠️</span>常见误区 </div><div class="knowledge-card__content"><ul><li><strong>忽略特征缩放</strong>：未对特征进行标准化，导致高方差特征主导聚类结果</li><li><strong>盲目选择K值</strong>：未使用肘部法则等方法验证K值的合理性</li><li><strong>过度解读聚类结果</strong>：将聚类结果视为绝对真理，而非数据探索工具</li><li><strong>忽略数据预处理</strong>：未处理异常值和缺失值，影响聚类质量</li></ul></div></div><h2 id="小结与思考" tabindex="-1"><a class="header-anchor" href="#小结与思考"><span>小结与思考</span></a></h2><p>K-Means是一种简单而强大的聚类算法，尽管有一些局限性，但在许多实际应用中仍然非常有效。</p><h3 id="关键要点回顾" tabindex="-1"><a class="header-anchor" href="#关键要点回顾"><span>关键要点回顾</span></a></h3><ul><li>K-Means通过迭代优化将数据划分为K个簇</li><li>算法的目标是最小化样本到簇中心的距离平方和</li><li>选择合适的K值对聚类结果至关重要</li><li>K-Means++等变体可以改进初始质心选择</li><li>对于大规模数据，Mini-Batch K-Means提供了计算效率</li></ul><h3 id="思考问题" tabindex="-1"><a class="header-anchor" href="#思考问题"><span>思考问题</span></a></h3><ol><li>在什么情况下K-Means可能不是最佳选择？</li><li>如何处理K-Means对异常值的敏感性？</li><li>除了肘部法则和轮廓系数，还有哪些方法可以确定最佳K值？</li></ol>',34)),u(l),s[17]||(s[17]=n("div",{class:"practice-link"},[n("a",{href:"/projects/clustering.html",class:"button"},"前往实践项目")],-1))])}const H=i(k,[["render",x],["__file","kmeans.html.vue"]]),K=JSON.parse('{"path":"/core/clustering/kmeans.html","title":"K-Means聚类算法","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"K-Means基本原理","slug":"k-means基本原理","link":"#k-means基本原理","children":[{"level":3,"title":"算法流程","slug":"算法流程","link":"#算法流程","children":[]},{"level":3,"title":"数学表达","slug":"数学表达","link":"#数学表达","children":[]}]},{"level":2,"title":"K-Means实现与应用","slug":"k-means实现与应用","link":"#k-means实现与应用","children":[{"level":3,"title":"基本实现","slug":"基本实现","link":"#基本实现","children":[]},{"level":3,"title":"确定最佳K值","slug":"确定最佳k值","link":"#确定最佳k值","children":[]},{"level":3,"title":"评估聚类质量","slug":"评估聚类质量","link":"#评估聚类质量","children":[]}]},{"level":2,"title":"K-Means的应用案例","slug":"k-means的应用案例","link":"#k-means的应用案例","children":[{"level":3,"title":"客户分群","slug":"客户分群","link":"#客户分群","children":[]}]},{"level":2,"title":"K-Means的变体与优化","slug":"k-means的变体与优化","link":"#k-means的变体与优化","children":[{"level":3,"title":"K-Means++","slug":"k-means","link":"#k-means","children":[]},{"level":3,"title":"Mini-Batch K-Means","slug":"mini-batch-k-means","link":"#mini-batch-k-means","children":[]},{"level":3,"title":"其他变体","slug":"其他变体","link":"#其他变体","children":[]}]},{"level":2,"title":"K-Means的局限性","slug":"k-means的局限性","link":"#k-means的局限性","children":[]},{"level":2,"title":"小结与思考","slug":"小结与思考","link":"#小结与思考","children":[{"level":3,"title":"关键要点回顾","slug":"关键要点回顾","link":"#关键要点回顾","children":[]},{"level":3,"title":"思考问题","slug":"思考问题","link":"#思考问题","children":[]}]}],"git":{},"filePathRelative":"core/clustering/kmeans.md"}');export{H as comp,K as data};
