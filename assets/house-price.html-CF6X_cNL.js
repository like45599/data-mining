import{_ as s,e as a,i as t,o as e}from"./app-BgnGfOJp.js";const p={};function o(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="house-price-prediction-model" tabindex="-1"><a class="header-anchor" href="#house-price-prediction-model"><span>House Price Prediction Model</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span>Project Overview </div><div class="knowledge-card__content"><ul><li><strong>Difficulty</strong>: Intermediate</li><li><strong>Type</strong>: Regression - Intermediate</li><li><strong>Skills</strong>: Feature Engineering, Regression Models, Model Evaluation</li><li><strong>Relevant Knowledge Module</strong>: <a href="/en/core/regression/linear-regression.html">Regression Analysis</a></li></ul></div></div><h2 id="project-background" tabindex="-1"><a class="header-anchor" href="#project-background"><span>Project Background</span></a></h2><p>House price prediction is a classic problem in machine learning and is important for home buyers, sellers, and investors. By analyzing house features (such as area, location, number of rooms, etc.), we can build a model to predict the market value of a house.</p><p>In this project, we will use a housing dataset from the suburbs of Boston to build a house price prediction model and explore the key factors influencing house prices.</p><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">💡</span>Did You Know? </div><div class="knowledge-card__content"><p>Many real estate websites like Zillow use machine learning algorithms to provide automatic valuation services. Zillow’s &quot;Zestimate&quot; uses machine learning models to estimate the price of over 100 million homes in the U.S., with an average error rate of about 2-3%.</p></div></div><h2 id="dataset-introduction" tabindex="-1"><a class="header-anchor" href="#dataset-introduction"><span>Dataset Introduction</span></a></h2><p>We will use the Boston housing dataset, which contains information about 506 neighborhoods in the Boston suburbs. Each sample has 13 features:</p><ul><li>CRIM: Per capita crime rate by town</li><li>ZN: Proportion of residential land zoned for large-scale properties (over 25,000 sq. ft.)</li><li>INDUS: Proportion of non-retail business acres per town</li><li>CHAS: Charles River dummy variable (1 if near the river, 0 otherwise)</li><li>NOX: Nitrogen oxide concentration</li><li>RM: Average number of rooms per dwelling</li><li>AGE: Proportion of owner-occupied units built before 1940</li><li>DIS: Weighted distance to Boston&#39;s five employment centers</li><li>RAD: Accessibility to radial highways</li><li>TAX: Full property tax rate per $10,000</li><li>PTRATIO: Pupil-teacher ratio by town</li><li>B: 1000(Bk - 0.63)^2, where Bk is the proportion of Black residents in a town</li><li>LSTAT: Percentage of the population considered lower status</li></ul><p>The target variable is MEDV, which is the median value of owner-occupied homes (in thousands of dollars).</p><h2 id="project-goals" tabindex="-1"><a class="header-anchor" href="#project-goals"><span>Project Goals</span></a></h2><ol><li>Build a regression model that can accurately predict house prices</li><li>Identify key features influencing house prices</li><li>Compare the performance of different regression algorithms</li><li>Evaluate the model’s performance under different evaluation metrics</li></ol><h2 id="implementation-steps" tabindex="-1"><a class="header-anchor" href="#implementation-steps"><span>Implementation Steps</span></a></h2><h3 id="_1-data-exploration-and-visualization" tabindex="-1"><a class="header-anchor" href="#_1-data-exploration-and-visualization"><span>1. Data Exploration and Visualization</span></a></h3><p>First, we need to understand the basic features and distribution of the data:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_boston</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression<span class="token punctuation">,</span> Ridge<span class="token punctuation">,</span> Lasso</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeRegressor</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestRegressor</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error<span class="token punctuation">,</span> r2_score<span class="token punctuation">,</span> mean_absolute_error</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load data</span></span>
<span class="line">boston <span class="token operator">=</span> load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span>boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">)</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;MEDV&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> boston<span class="token punctuation">.</span>target</span>
<span class="line"></span>
<span class="line"><span class="token comment"># View basic information</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Check for missing values</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize the distribution of the target variable</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>histplot<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;MEDV&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kde<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;House Price Distribution&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Price (in thousands of dollars)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Frequency&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View correlation between features and target variable</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">correlation_matrix <span class="token operator">=</span> df<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>correlation_matrix<span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;coolwarm&#39;</span><span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">&#39;.2f&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Feature Correlation Matrix&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Scatter plots for important features vs house price</span></span>
<span class="line">important_features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;RM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;LSTAT&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;PTRATIO&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;DIS&#39;</span><span class="token punctuation">]</span></span>
<span class="line">fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">axes <span class="token operator">=</span> axes<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i<span class="token punctuation">,</span> feature <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>important_features<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span>feature<span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;MEDV&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>df<span class="token punctuation">,</span> ax<span class="token operator">=</span>axes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    axes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>feature<span class="token punctuation">}</span></span><span class="token string"> vs House Price&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-data-preprocessing" tabindex="-1"><a class="header-anchor" href="#_2-data-preprocessing"><span>2. Data Preprocessing</span></a></h3><p>Next, we prepare the data for model training:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Separate features and target variable</span></span>
<span class="line">X <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;MEDV&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;MEDV&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Split into training and test sets</span></span>
<span class="line">X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature scaling</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">X_train_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span></span>
<span class="line">X_test_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-model-training-and-evaluation" tabindex="-1"><a class="header-anchor" href="#_3-model-training-and-evaluation"><span>3. Model Training and Evaluation</span></a></h3><p>We will try several regression models and compare their performance:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Define evaluation function</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">evaluate_model</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Train the model</span></span>
<span class="line">    model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Predictions</span></span>
<span class="line">    y_train_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span></span>
<span class="line">    y_test_pred <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Calculate evaluation metrics</span></span>
<span class="line">    train_rmse <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> y_train_pred<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    test_rmse <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    train_r2 <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y_train<span class="token punctuation">,</span> y_train_pred<span class="token punctuation">)</span></span>
<span class="line">    test_r2 <span class="token operator">=</span> r2_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span></span>
<span class="line">    test_mae <span class="token operator">=</span> mean_absolute_error<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_test_pred<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Training RMSE: </span><span class="token interpolation"><span class="token punctuation">{</span>train_rmse<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test RMSE: </span><span class="token interpolation"><span class="token punctuation">{</span>test_rmse<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Training R²: </span><span class="token interpolation"><span class="token punctuation">{</span>train_r2<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test R²: </span><span class="token interpolation"><span class="token punctuation">{</span>test_r2<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Test MAE: </span><span class="token interpolation"><span class="token punctuation">{</span>test_mae<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> model<span class="token punctuation">,</span> y_test_pred</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Linear Regression</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Linear Regression Model:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">lr_model<span class="token punctuation">,</span> lr_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train_scaled<span class="token punctuation">,</span> X_test_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Ridge Regression</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Ridge Regression Model:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">ridge_model<span class="token punctuation">,</span> ridge_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>Ridge<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train_scaled<span class="token punctuation">,</span> X_test_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Lasso Regression</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Lasso Regression Model:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">lasso_model<span class="token punctuation">,</span> lasso_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>Lasso<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train_scaled<span class="token punctuation">,</span> X_test_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Decision Tree Regression</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Decision Tree Regression Model:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">dt_model<span class="token punctuation">,</span> dt_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Random Forest Regression</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Random Forest Regression Model:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">rf_model<span class="token punctuation">,</span> rf_pred <span class="token operator">=</span> evaluate_model<span class="token punctuation">(</span>RandomForestRegressor<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-feature-importance-analysis" tabindex="-1"><a class="header-anchor" href="#_4-feature-importance-analysis"><span>4. Feature Importance Analysis</span></a></h3><p>Understand which features have the most impact on house prices:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Use Random Forest model for feature importance analysis</span></span>
<span class="line">feature_importance <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;Feature&#39;</span><span class="token punctuation">:</span> X<span class="token punctuation">.</span>columns<span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Importance&#39;</span><span class="token punctuation">:</span> rf_model<span class="token punctuation">.</span>feature_importances_</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">feature_importance <span class="token operator">=</span> feature_importance<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">&#39;Importance&#39;</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Importance&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Feature&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>feature_importance<span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Feature Importance&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-prediction-visualization" tabindex="-1"><a class="header-anchor" href="#_5-prediction-visualization"><span>5. Prediction Visualization</span></a></h3><p>Visualize the model’s predicted values against the actual values:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Visualize predictions</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> rf_pred<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>y_test<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y_test<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>y_test<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y_test<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;r--&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Actual House Price&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Predicted House Price&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Random Forest Model: Actual vs Predicted House Price&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Residual analysis</span></span>
<span class="line">residuals <span class="token operator">=</span> y_test <span class="token operator">-</span> rf_pred</span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>rf_pred<span class="token punctuation">,</span> residuals<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>axhline<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Predicted House Price&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Residuals&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Residual Analysis&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="advanced-challenges" tabindex="-1"><a class="header-anchor" href="#advanced-challenges"><span>Advanced Challenges</span></a></h2><p>If you have completed the basic tasks, try the following advanced challenges:</p><ol><li><strong>Feature Engineering</strong>: Create new features, such as room-to-area ratios or interaction features.</li><li><strong>Hyperparameter Tuning</strong>: Optimize model parameters using grid search or random search.</li><li><strong>Ensemble Methods</strong>: Try stacking or voting ensemble methods to improve prediction performance.</li><li><strong>Non-linear Transformations</strong>: Apply log or polynomial transformations to features or target variables.</li><li><strong>Cross-validation</strong>: Implement k-fold cross-validation for more robust model evaluation.</li></ol><h2 id="summary-and-reflection" tabindex="-1"><a class="header-anchor" href="#summary-and-reflection"><span>Summary and Reflection</span></a></h2><p>Through this project, we learned how to build a house price prediction model, from data exploration to model evaluation. We found that factors like the number of rooms, the percentage of lower status population, and the pupil-teacher ratio significantly impact house prices.</p><p>In real-world applications, house price prediction models can help buyers assess reasonable prices, sellers set appropriate pricing strategies, and developers identify promising areas.</p><h3 id="reflection-questions" tabindex="-1"><a class="header-anchor" href="#reflection-questions"><span>Reflection Questions</span></a></h3><ol><li>Besides the features we used, what other factors might influence house prices? How could you obtain this data?</li><li>Which types of houses did our model perform poorly on? Why?</li><li>How could you apply this model to other cities? What factors would you need to consider?</li></ol><div class="practice-link"><a href="/en/projects/regression/sales-forecast.html" class="button">Next Project: Sales Forecasting</a></div>`,37)]))}const c=s(p,[["render",o],["__file","house-price.html.vue"]]),u=JSON.parse('{"path":"/en/projects/regression/house-price.html","title":"House Price Prediction Model","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Project Background","slug":"project-background","link":"#project-background","children":[]},{"level":2,"title":"Dataset Introduction","slug":"dataset-introduction","link":"#dataset-introduction","children":[]},{"level":2,"title":"Project Goals","slug":"project-goals","link":"#project-goals","children":[]},{"level":2,"title":"Implementation Steps","slug":"implementation-steps","link":"#implementation-steps","children":[{"level":3,"title":"1. Data Exploration and Visualization","slug":"_1-data-exploration-and-visualization","link":"#_1-data-exploration-and-visualization","children":[]},{"level":3,"title":"2. Data Preprocessing","slug":"_2-data-preprocessing","link":"#_2-data-preprocessing","children":[]},{"level":3,"title":"3. Model Training and Evaluation","slug":"_3-model-training-and-evaluation","link":"#_3-model-training-and-evaluation","children":[]},{"level":3,"title":"4. Feature Importance Analysis","slug":"_4-feature-importance-analysis","link":"#_4-feature-importance-analysis","children":[]},{"level":3,"title":"5. Prediction Visualization","slug":"_5-prediction-visualization","link":"#_5-prediction-visualization","children":[]}]},{"level":2,"title":"Advanced Challenges","slug":"advanced-challenges","link":"#advanced-challenges","children":[]},{"level":2,"title":"Summary and Reflection","slug":"summary-and-reflection","link":"#summary-and-reflection","children":[{"level":3,"title":"Reflection Questions","slug":"reflection-questions","link":"#reflection-questions","children":[]}]}],"git":{"updatedTime":1742831857000,"contributors":[{"name":"like45599","username":"like45599","email":"131803211+like45599@users.noreply.github.com","commits":2,"url":"https://github.com/like45599"}],"changelog":[{"hash":"2bc457cfaf02a69e1673760e9106a75f7cced3da","time":1742831857000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"优化跳转地址+更新网站icon"},{"hash":"61a31e55d1325755fa12a32e909ee09c3ac0a20f","time":1742460681000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"数据挖掘指南v1.0"}]},"filePathRelative":"en/projects/regression/house-price.md"}');export{c as comp,u as data};
