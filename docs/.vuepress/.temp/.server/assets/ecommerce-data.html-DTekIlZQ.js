import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "../app.DfozzGWd.mjs";
import "@vuepress/shared";
import "vue-router";
import "@vueuse/core";
import "@vue/devtools-api";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="电商用户数据清洗与分析" tabindex="-1"><a class="header-anchor" href="#电商用户数据清洗与分析"><span>电商用户数据清洗与分析</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span>项目概述 </div><div class="knowledge-card__content"><ul><li><strong>难度</strong>：入门级</li><li><strong>类型</strong>：数据清洗与预处理</li><li><strong>技能点</strong>：缺失值处理、异常检测、数据转换、特征创建</li><li><strong>对应知识模块</strong>：<a href="/core/preprocessing/data-presentation.html">数据预处理</a></li></ul></div></div><h2 id="项目背景" tabindex="-1"><a class="header-anchor" href="#项目背景"><span>项目背景</span></a></h2><p>电子商务平台每天产生大量用户行为数据，包括浏览、搜索、加入购物车和购买等活动。这些数据对于了解用户行为模式、优化产品推荐和提高转化率至关重要。然而，原始数据通常包含缺失值、异常值和不一致的格式，需要进行清洗和预处理才能用于后续分析。</p><p>在这个项目中，我们将处理一个电商平台的用户行为数据集，通过数据清洗和预处理，为后续的用户行为分析做准备。</p><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">💡</span>你知道吗？ </div><div class="knowledge-card__content"><p>数据科学家通常花费60-70%的时间在数据清洗和预处理上。高质量的数据预处理不仅可以提高模型性能，还能减少后续分析中的错误和偏差。</p></div></div><h2 id="数据集介绍" tabindex="-1"><a class="header-anchor" href="#数据集介绍"><span>数据集介绍</span></a></h2><p>本项目使用的数据集包含一个电商平台一周内的用户行为数据，共有10,000条记录和以下字段：</p><ul><li><strong>user_id</strong>：用户ID</li><li><strong>session_id</strong>：会话ID</li><li><strong>timestamp</strong>：活动时间戳</li><li><strong>page_url</strong>：访问的页面URL</li><li><strong>event_type</strong>：事件类型（view、cart、purchase）</li><li><strong>product_id</strong>：产品ID</li><li><strong>category</strong>：产品类别</li><li><strong>price</strong>：产品价格</li><li><strong>user_agent</strong>：用户浏览器信息</li><li><strong>user_region</strong>：用户所在地区</li></ul><p>数据集中存在多种数据质量问题，包括缺失值、异常值、格式不一致和重复记录等。</p><h2 id="项目目标" tabindex="-1"><a class="header-anchor" href="#项目目标"><span>项目目标</span></a></h2><ol><li>识别并处理数据集中的缺失值</li><li>检测并处理异常值和离群点</li><li>标准化和转换数据格式</li><li>创建有意义的派生特征</li><li>准备干净的数据集用于后续分析</li></ol><h2 id="实施步骤" tabindex="-1"><a class="header-anchor" href="#实施步骤"><span>实施步骤</span></a></h2><h3 id="步骤1-数据加载与初步探索" tabindex="-1"><a class="header-anchor" href="#步骤1-数据加载与初步探索"><span>步骤1：数据加载与初步探索</span></a></h3><p>首先，我们加载数据并进行初步探索，了解数据的基本情况。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载数据</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;ecommerce_data.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看数据基本信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看前几行数据</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查缺失值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查重复记录</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;重复记录数: </span><span class="token interpolation"><span class="token punctuation">{</span>df<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤2-处理缺失值" tabindex="-1"><a class="header-anchor" href="#步骤2-处理缺失值"><span>步骤2：处理缺失值</span></a></h3><p>根据初步探索，我们发现数据集中存在缺失值，需要采取适当的策略处理。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 检查每列的缺失比例</span></span>
<span class="line">missing_percentage <span class="token operator">=</span> df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>missing_percentage<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 处理缺失的产品价格 - 使用同类别产品的中位数填充</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 处理缺失的用户地区 - 使用众数填充</span></span>
<span class="line">most_common_region <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;user_region&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;user_region&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;user_region&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>most_common_region<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 处理缺失的产品类别 - 从product_id推断</span></span>
<span class="line"><span class="token comment"># 假设我们有一个产品映射字典</span></span>
<span class="line">product_category_map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>  <span class="token comment"># 实际项目中需要构建这个映射</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> row<span class="token punctuation">:</span> product_category_map<span class="token punctuation">.</span>get<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&#39;product_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </span>
<span class="line">                         <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">else</span> row<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除缺失关键信息的记录</span></span>
<span class="line">df <span class="token operator">=</span> df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;session_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查处理后的缺失值情况</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤3-检测和处理异常值" tabindex="-1"><a class="header-anchor" href="#步骤3-检测和处理异常值"><span>步骤3：检测和处理异常值</span></a></h3><p>接下来，我们需要检测和处理数据集中的异常值。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 检查价格的分布</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;价格分布&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用IQR方法检测价格异常值</span></span>
<span class="line">Q1 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span></span>
<span class="line">Q3 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line">IQR <span class="token operator">=</span> Q3 <span class="token operator">-</span> Q1</span>
<span class="line">lower_bound <span class="token operator">=</span> Q1 <span class="token operator">-</span> <span class="token number">1.5</span> <span class="token operator">*</span> IQR</span>
<span class="line">upper_bound <span class="token operator">=</span> Q3 <span class="token operator">+</span> <span class="token number">1.5</span> <span class="token operator">*</span> IQR</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 标记异常值</span></span>
<span class="line">price_outliers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> lower_bound<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> upper_bound<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;价格异常值数量: </span><span class="token interpolation"><span class="token punctuation">{</span>price_outliers<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 处理价格异常值 - 将极端值限制在合理范围内</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;price_cleaned&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clip<span class="token punctuation">(</span>lower_bound<span class="token punctuation">,</span> upper_bound<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查时间戳的有效性</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">&#39;coerce&#39;</span><span class="token punctuation">)</span></span>
<span class="line">invalid_timestamps <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无效时间戳数量: </span><span class="token interpolation"><span class="token punctuation">{</span>invalid_timestamps<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除无效时间戳的记录</span></span>
<span class="line">df <span class="token operator">=</span> df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查事件类型的有效性</span></span>
<span class="line">valid_event_types <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;view&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cart&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;purchase&#39;</span><span class="token punctuation">]</span></span>
<span class="line">invalid_events <span class="token operator">=</span> <span class="token operator">~</span>df<span class="token punctuation">[</span><span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>valid_event_types<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无效事件类型数量: </span><span class="token interpolation"><span class="token punctuation">{</span>invalid_events<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 修正事件类型 - 假设我们有一些规则来修正</span></span>
<span class="line">df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;add_to_cart&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;cart&#39;</span></span>
<span class="line">df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;buy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;purchase&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤4-数据标准化和格式转换" tabindex="-1"><a class="header-anchor" href="#步骤4-数据标准化和格式转换"><span>步骤4：数据标准化和格式转换</span></a></h3><p>为了便于后续分析，我们需要标准化数据格式。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 标准化时间戳格式</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>date</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;hour&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>hour</span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;day_of_week&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>day_name<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从URL中提取页面类型</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">extract_page_type</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token string">&#39;product&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;product_page&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;category&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;category_page&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;search&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;search_page&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;cart&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;cart_page&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;checkout&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;checkout_page&#39;</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;other&#39;</span></span>
<span class="line"></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;page_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;page_url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>extract_page_type<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 标准化产品类别</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从user_agent提取设备类型</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">extract_device_type</span><span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;unknown&#39;</span></span>
<span class="line">    user_agent <span class="token operator">=</span> user_agent<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token string">&#39;mobile&#39;</span> <span class="token keyword">in</span> user_agent <span class="token keyword">or</span> <span class="token string">&#39;android&#39;</span> <span class="token keyword">in</span> user_agent <span class="token keyword">or</span> <span class="token string">&#39;iphone&#39;</span> <span class="token keyword">in</span> user_agent<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;mobile&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> <span class="token string">&#39;tablet&#39;</span> <span class="token keyword">in</span> user_agent <span class="token keyword">or</span> <span class="token string">&#39;ipad&#39;</span> <span class="token keyword">in</span> user_agent<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;tablet&#39;</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;desktop&#39;</span></span>
<span class="line"></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;device_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;user_agent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>extract_device_type<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤5-创建派生特征" tabindex="-1"><a class="header-anchor" href="#步骤5-创建派生特征"><span>步骤5：创建派生特征</span></a></h3><p>为了增强数据的分析价值，我们创建一些派生特征。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 计算会话持续时间</span></span>
<span class="line">session_start <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">session_end <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">session_duration <span class="token operator">=</span> <span class="token punctuation">(</span>session_end <span class="token operator">-</span> session_start<span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span>  <span class="token comment"># 转换为分钟</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将会话持续时间添加到原始数据框</span></span>
<span class="line">session_duration_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;session_duration&#39;</span><span class="token punctuation">:</span> session_duration<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">session_duration_df<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df<span class="token punctuation">,</span> session_duration_df<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算用户在每个会话中的活动数量</span></span>
<span class="line">activity_count <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>unstack<span class="token punctuation">(</span>fill_value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">activity_count<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>col<span class="token punctuation">}</span></span><span class="token string">_count&#39;</span></span> <span class="token keyword">for</span> col <span class="token keyword">in</span> activity_count<span class="token punctuation">.</span>columns<span class="token punctuation">]</span></span>
<span class="line">activity_count<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df<span class="token punctuation">,</span> activity_count<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建购买标志</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;has_purchase&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;purchase&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算价格区间</span></span>
<span class="line">price_bins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;inf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line">price_labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;very_low&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;low&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;high&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;very_high&#39;</span><span class="token punctuation">]</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;price_range&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;price_cleaned&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> bins<span class="token operator">=</span>price_bins<span class="token punctuation">,</span> labels<span class="token operator">=</span>price_labels<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤6-数据验证与导出" tabindex="-1"><a class="header-anchor" href="#步骤6-数据验证与导出"><span>步骤6：数据验证与导出</span></a></h3><p>最后，我们验证清洗后的数据并导出用于后续分析。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 检查数据质量</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;清洗后的数据形状:&quot;</span><span class="token punctuation">,</span> df<span class="token punctuation">.</span>shape<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;缺失值情况:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查数据一致性</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;事件类型分布:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;event_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;设备类型分布:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;device_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 导出清洗后的数据</span></span>
<span class="line">df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;ecommerce_data_cleaned.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建汇总数据用于分析</span></span>
<span class="line">session_summary <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;session_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;date&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;device_type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;view_count&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;cart_count&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;purchase_count&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;session_duration&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;has_purchase&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;first&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">session_summary<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;session_summary.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结果分析" tabindex="-1"><a class="header-anchor" href="#结果分析"><span>结果分析</span></a></h2><p>通过数据清洗和预处理，我们解决了以下数据质量问题：</p><ol><li><strong>缺失值处理</strong>：填充了缺失的价格、用户地区和产品类别，删除了缺失关键信息的记录</li><li><strong>异常值处理</strong>：识别并处理了价格异常值，修正了无效的时间戳和事件类型</li><li><strong>数据标准化</strong>：统一了时间格式，标准化了产品类别，提取了页面类型和设备类型</li><li><strong>特征创建</strong>：创建了会话持续时间、活动计数、购买标志和价格区间等派生特征</li></ol><p>清洗后的数据集更加完整、一致和有结构，为后续的用户行为分析提供了坚实的基础。</p><h2 id="进阶挑战" tabindex="-1"><a class="header-anchor" href="#进阶挑战"><span>进阶挑战</span></a></h2><p>如果你已经完成了基本任务，可以尝试以下进阶挑战：</p><ol><li><strong>高级缺失值填充</strong>：使用机器学习模型预测缺失值</li><li><strong>用户行为序列分析</strong>：分析用户在一个会话中的行为序列和转化路径</li><li><strong>异常检测算法</strong>：应用隔离森林等算法自动检测多维异常</li><li><strong>特征重要性分析</strong>：评估不同特征对购买行为的预测能力</li><li><strong>数据可视化</strong>：创建交互式仪表板展示清洗后的数据洞察</li></ol><h2 id="小结与反思" tabindex="-1"><a class="header-anchor" href="#小结与反思"><span>小结与反思</span></a></h2><p>通过这个项目，我们学习了如何处理电商用户数据中常见的数据质量问题，并为后续分析做好准备。数据预处理是数据分析和挖掘的基础，良好的数据质量对于得出可靠的结论至关重要。</p><p>在实际应用中，这类数据清洗工作可以帮助电商平台更好地理解用户行为，优化用户体验，提高转化率和销售额。例如，通过分析不同设备类型的转化率差异，可以针对性地优化移动端或桌面端的用户界面。</p><h3 id="思考问题" tabindex="-1"><a class="header-anchor" href="#思考问题"><span>思考问题</span></a></h3><ol><li>在处理缺失值时，我们应该考虑哪些因素来选择合适的填充策略？</li><li>异常值是否总是应该被移除或修正？在什么情况下异常值可能包含有价值的信息？</li><li>如何评估数据清洗和预处理的效果？有哪些指标可以衡量数据质量的提升？</li></ol><div class="practice-link"><a href="/projects/preprocessing/medical-missing-values.html" class="button">下一个项目：医疗数据缺失值处理</a></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vuepress/.temp/pages/projects/preprocessing/ecommerce-data.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ecommerceData_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "ecommerce-data.html.vue"]]);
const data = JSON.parse('{"path":"/projects/preprocessing/ecommerce-data.html","title":"电商用户数据清洗与分析","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"项目背景","slug":"项目背景","link":"#项目背景","children":[]},{"level":2,"title":"数据集介绍","slug":"数据集介绍","link":"#数据集介绍","children":[]},{"level":2,"title":"项目目标","slug":"项目目标","link":"#项目目标","children":[]},{"level":2,"title":"实施步骤","slug":"实施步骤","link":"#实施步骤","children":[{"level":3,"title":"步骤1：数据加载与初步探索","slug":"步骤1-数据加载与初步探索","link":"#步骤1-数据加载与初步探索","children":[]},{"level":3,"title":"步骤2：处理缺失值","slug":"步骤2-处理缺失值","link":"#步骤2-处理缺失值","children":[]},{"level":3,"title":"步骤3：检测和处理异常值","slug":"步骤3-检测和处理异常值","link":"#步骤3-检测和处理异常值","children":[]},{"level":3,"title":"步骤4：数据标准化和格式转换","slug":"步骤4-数据标准化和格式转换","link":"#步骤4-数据标准化和格式转换","children":[]},{"level":3,"title":"步骤5：创建派生特征","slug":"步骤5-创建派生特征","link":"#步骤5-创建派生特征","children":[]},{"level":3,"title":"步骤6：数据验证与导出","slug":"步骤6-数据验证与导出","link":"#步骤6-数据验证与导出","children":[]}]},{"level":2,"title":"结果分析","slug":"结果分析","link":"#结果分析","children":[]},{"level":2,"title":"进阶挑战","slug":"进阶挑战","link":"#进阶挑战","children":[]},{"level":2,"title":"小结与反思","slug":"小结与反思","link":"#小结与反思","children":[{"level":3,"title":"思考问题","slug":"思考问题","link":"#思考问题","children":[]}]}],"git":{"updatedTime":1742460681000,"contributors":[{"name":"like45599","username":"like45599","email":"131803211+like45599@users.noreply.github.com","commits":1,"url":"https://github.com/like45599"}],"changelog":[{"hash":"61a31e55d1325755fa12a32e909ee09c3ac0a20f","time":1742460681000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"数据挖掘指南v1.0"}]},"filePathRelative":"projects/preprocessing/ecommerce-data.md"}');
export {
  ecommerceData_html as comp,
  data
};
