import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent, ssrRenderStyle } from "vue/server-renderer";
import { _ as _export_sfc } from "../app.C2n1Acj7.mjs";
import "@vuepress/shared";
import "vue-router";
import "@vueuse/core";
import "@vue/devtools-api";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_CrispDmModel = resolveComponent("CrispDmModel");
  const _component_BackToPath = resolveComponent("BackToPath");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="data-mining-process" tabindex="-1"><a class="header-anchor" href="#data-mining-process"><span>Data Mining Process</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span> Key Points of This Section </div><div class="knowledge-card__content"><ul><li>Understand the standard process of data mining and the tasks at each stage</li><li>Master the six stages of the CRISP-DM model</li><li>Understand common challenges in data mining projects</li><li>Recognize the importance of iterative improvement in data mining</li></ul></div></div><h2 id="standard-process-of-data-mining" tabindex="-1"><a class="header-anchor" href="#standard-process-of-data-mining"><span>Standard Process of Data Mining</span></a></h2><p>Data mining is not a simple one-step operation; it is a structured process with multiple interrelated stages. The widely adopted standard process is CRISP-DM (Cross-Industry Standard Process for Data Mining).</p><h3 id="crisp-dm-model" tabindex="-1"><a class="header-anchor" href="#crisp-dm-model"><span>CRISP-DM Model</span></a></h3><p>CRISP-DM (Cross-Industry Standard Process for Data Mining) is a widely used methodology for data mining, providing a structured approach for planning and executing data mining projects:</p>`);
  _push(ssrRenderComponent(_component_CrispDmModel, null, null, _parent));
  _push(`<p>This process is iterative, with stages often needing to go back and forth, rather than being strictly linear.</p><h2 id="detailed-explanation-of-each-stage" tabindex="-1"><a class="header-anchor" href="#detailed-explanation-of-each-stage"><span>Detailed Explanation of Each Stage</span></a></h2><h3 id="_1-business-understanding" tabindex="-1"><a class="header-anchor" href="#_1-business-understanding"><span>1. Business Understanding</span></a></h3><p>This is the starting point of the data mining project, focusing on understanding the project goals and requirements.</p><p><strong>Main Tasks</strong>:</p><ul><li>Define business goals</li><li>Assess the current situation</li><li>Define data mining objectives</li><li>Develop project plan</li></ul><p><strong>Key Questions</strong>:</p><ul><li>What business problem are we trying to solve?</li><li>What are the success criteria?</li><li>What resources are needed?</li></ul><p><strong>Example</strong>: An e-commerce company aims to reduce customer churn. The business goal is to improve customer retention, and the data mining goal is to build a model that predicts which customers are likely to churn.</p><h3 id="_2-data-understanding" tabindex="-1"><a class="header-anchor" href="#_2-data-understanding"><span>2. Data Understanding</span></a></h3><p>This stage involves collecting initial data and exploring it to familiarize oneself with the data characteristics.</p><p><strong>Main Tasks</strong>:</p><ul><li>Collect initial data</li><li>Describe data</li><li>Explore data</li><li>Validate data quality</li></ul><p><strong>Key Techniques</strong>:</p><ul><li>Descriptive statistics</li><li>Data visualization</li><li>Correlation analysis</li></ul><div class="code-example"><div class="code-example__title">Data Exploration Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load data</span></span>
<span class="line">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;customer_data.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View basic information</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Check for missing values</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize data distribution</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> i<span class="token punctuation">,</span> column <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>select_dtypes<span class="token punctuation">(</span>include<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;float64&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;int64&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>columns<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    sns<span class="token punctuation">.</span>histplot<span class="token punctuation">(</span>data<span class="token punctuation">[</span>column<span class="token punctuation">]</span><span class="token punctuation">,</span> kde<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>column<span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Correlation analysis</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">correlation_matrix <span class="token operator">=</span> data<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>correlation_matrix<span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;coolwarm&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Feature Correlation Matrix&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="_3-data-preparation" tabindex="-1"><a class="header-anchor" href="#_3-data-preparation"><span>3. Data Preparation</span></a></h3><p>This is the most time-consuming stage in data mining, involving transforming raw data into a form suitable for modeling.</p><p><strong>Main Tasks</strong>:</p><ul><li>Data cleaning</li><li>Feature selection</li><li>Data transformation</li><li>Data integration</li><li>Data reduction</li></ul><p><strong>Common Techniques</strong>:</p><ul><li>Handling missing values</li><li>Outlier detection and handling</li><li>Feature engineering</li><li>Data standardization/normalization</li><li>Dimensionality reduction</li></ul><p><strong>Importance of Data Preparation</strong>: It is estimated that data scientists typically spend 60-80% of their time on data preparation, reflecting the importance of high-quality data for successful modeling.</p><h3 id="_4-modeling" tabindex="-1"><a class="header-anchor" href="#_4-modeling"><span>4. Modeling</span></a></h3><p>In this stage, various modeling techniques are selected and applied, and parameters are optimized to achieve the best results.</p><p><strong>Main Tasks</strong>:</p><ul><li>Select modeling techniques</li><li>Design testing procedures</li><li>Build models</li><li>Evaluate models</li></ul><p><strong>Common Models</strong>:</p><ul><li>Classification models: Decision trees, random forests, SVM, neural networks, etc.</li><li>Clustering models: K-means, hierarchical clustering, DBSCAN, etc.</li><li>Regression models: Linear regression, polynomial regression, gradient boosting trees, etc.</li><li>Association rules: Apriori algorithm, FP-growth, etc.</li></ul><div class="code-example"><div class="code-example__title">Model building example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split<span class="token punctuation">,</span> GridSearchCV</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> classification_report</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Prepare features and target variable</span></span>
<span class="line">X <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;churn&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;churn&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Split into training and test sets</span></span>
<span class="line">X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define model</span></span>
<span class="line">model <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Parameter grid</span></span>
<span class="line">param_grid <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;n_estimators&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;max_depth&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;min_samples_split&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;min_samples_leaf&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Grid search</span></span>
<span class="line">grid_search <span class="token operator">=</span> GridSearchCV<span class="token punctuation">(</span>model<span class="token punctuation">,</span> param_grid<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> scoring<span class="token operator">=</span><span class="token string">&#39;f1&#39;</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">grid_search<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Best model</span></span>
<span class="line">best_model <span class="token operator">=</span> grid_search<span class="token punctuation">.</span>best_estimator_</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Best Parameters: </span><span class="token interpolation"><span class="token punctuation">{</span>grid_search<span class="token punctuation">.</span>best_params_<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Evaluate model</span></span>
<span class="line">y_pred <span class="token operator">=</span> best_model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>classification_report<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="_5-evaluation" tabindex="-1"><a class="header-anchor" href="#_5-evaluation"><span>5. Evaluation</span></a></h3><p>In this stage, the model is assessed to determine if it meets business objectives and decide on the next steps.</p><p><strong>Main Tasks</strong>:</p><ul><li>Evaluate results</li><li>Review the process</li><li>Determine next steps</li></ul><p><strong>Evaluation Dimensions</strong>:</p><ul><li>Technical evaluation: Accuracy, precision, recall, F1 score, etc.</li><li>Business evaluation: Cost-benefit analysis, ROI calculation, feasibility of implementation, etc.</li></ul><p><strong>Common Questions</strong>:</p><ul><li>Does the model solve the original business problem?</li><li>Are any new insights or issues discovered?</li><li>Can the model be deployed into production?</li></ul><h3 id="_6-deployment" tabindex="-1"><a class="header-anchor" href="#_6-deployment"><span>6. Deployment</span></a></h3><p>The final stage is to integrate the model into the business process and ensure its continued effectiveness.</p><p><strong>Main Tasks</strong>:</p><ul><li>Deployment planning</li><li>Monitoring and maintenance</li><li>Final reporting</li><li>Project review</li></ul><p><strong>Deployment Methods</strong>:</p><ul><li>Batch integration</li><li>Real-time API services</li><li>Embedded solutions</li><li>Automated reporting systems</li></ul><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">⚠️</span>Common challenges </div><div class="knowledge-card__content"><ul><li><strong>Data quality issues </strong>：Missing values, noisy data, inconsistent data</li><li><strong> Feature engineering difficulties</strong>： Creating effective features requires domain knowledge and creativity </li><li><strong>Model selection dilemma </strong>：Different models have different advantages and disadvantages, choosing the right model is not easy </li><li><strong>Overfitting risk </strong>：The model may perform well on the training data but generalize poorly</li><li><strong>Computational resource constraints</strong>：Large data sets and complex models may require significant computational resources</li><li><strong>Business integration challenges </strong>：There may be technical and organizational barriers to integrating model results into business processes</li></ul></div></div><h2 id="iteration-and-improvement" tabindex="-1"><a class="header-anchor" href="#iteration-and-improvement"><span>Iteration and Improvement</span></a></h2><p>Data mining is an iterative process, and perfect results are rarely obtained on the first attempt. Key elements of iterative improvement include:</p><ol><li><strong>Continuous evaluation</strong>: Regularly assess model performance and business value</li><li><strong>Collect feedback</strong>: Gather feedback from end-users and stakeholders</li><li><strong>Model updates</strong>: Update models as new data becomes available</li><li><strong>Process optimization</strong>: Improve data mining processes based on experience</li><li><strong>Knowledge management</strong>: Document lessons learned and establish an organizational knowledge base</li></ol><h2 id="summary-and-reflection" tabindex="-1"><a class="header-anchor" href="#summary-and-reflection"><span>Summary and Reflection</span></a></h2><p>Data mining is a structured process, from business understanding to model deployment, with each stage involving specific tasks and challenges.</p><h3 id="key-takeaways" tabindex="-1"><a class="header-anchor" href="#key-takeaways"><span>Key Takeaways</span></a></h3><ul><li>CRISP-DM provides a standardized framework for the data mining process</li><li>Data preparation is often the most time-consuming but also the most critical stage</li><li>Model evaluation needs to consider both technical metrics and business value</li><li>Data mining is an iterative process that requires continuous improvement</li></ul><h3 id="reflective-questions" tabindex="-1"><a class="header-anchor" href="#reflective-questions"><span>Reflective Questions</span></a></h3><ol><li>Why is the business understanding phase so important in a data mining project?</li><li>What common challenges might be encountered during the data preparation phase, and how can they be overcome?</li><li>How do you balance model complexity and interpretability requirements?</li></ol>`);
  _push(ssrRenderComponent(_component_BackToPath, null, null, _parent));
  _push(`<div class="practice-link"><a href="/en/overview/applications.html" class="button">Next section: Data mining applications</a></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vuepress/.temp/pages/en/overview/process.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const process_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "process.html.vue"]]);
const data = JSON.parse('{"path":"/en/overview/process.html","title":"Data Mining Process","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Standard Process of Data Mining","slug":"standard-process-of-data-mining","link":"#standard-process-of-data-mining","children":[{"level":3,"title":"CRISP-DM Model","slug":"crisp-dm-model","link":"#crisp-dm-model","children":[]}]},{"level":2,"title":"Detailed Explanation of Each Stage","slug":"detailed-explanation-of-each-stage","link":"#detailed-explanation-of-each-stage","children":[{"level":3,"title":"1. Business Understanding","slug":"_1-business-understanding","link":"#_1-business-understanding","children":[]},{"level":3,"title":"2. Data Understanding","slug":"_2-data-understanding","link":"#_2-data-understanding","children":[]},{"level":3,"title":"3. Data Preparation","slug":"_3-data-preparation","link":"#_3-data-preparation","children":[]},{"level":3,"title":"4. Modeling","slug":"_4-modeling","link":"#_4-modeling","children":[]},{"level":3,"title":"5. Evaluation","slug":"_5-evaluation","link":"#_5-evaluation","children":[]},{"level":3,"title":"6. Deployment","slug":"_6-deployment","link":"#_6-deployment","children":[]}]},{"level":2,"title":"Iteration and Improvement","slug":"iteration-and-improvement","link":"#iteration-and-improvement","children":[]},{"level":2,"title":"Summary and Reflection","slug":"summary-and-reflection","link":"#summary-and-reflection","children":[{"level":3,"title":"Key Takeaways","slug":"key-takeaways","link":"#key-takeaways","children":[]},{"level":3,"title":"Reflective Questions","slug":"reflective-questions","link":"#reflective-questions","children":[]}]}],"git":{"updatedTime":1742831857000,"contributors":[{"name":"like45599","username":"like45599","email":"131803211+like45599@users.noreply.github.com","commits":2,"url":"https://github.com/like45599"}],"changelog":[{"hash":"2bc457cfaf02a69e1673760e9106a75f7cced3da","time":1742831857000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"优化跳转地址+更新网站icon"},{"hash":"61a31e55d1325755fa12a32e909ee09c3ac0a20f","time":1742460681000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"数据挖掘指南v1.0"}]},"filePathRelative":"en/overview/process.md"}');
export {
  process_html as comp,
  data
};
