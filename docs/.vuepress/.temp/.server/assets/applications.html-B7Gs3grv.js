import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderStyle, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "../app.C2n1Acj7.mjs";
import "@vuepress/shared";
import "vue-router";
import "@vueuse/core";
import "@vue/devtools-api";
const _sfc_main = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_BackToPath = resolveComponent("BackToPath");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="clustering-practical-application-cases" tabindex="-1"><a class="header-anchor" href="#clustering-practical-application-cases"><span>Clustering Practical Application Cases</span></a></h1><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">📚</span> Key Takeaways </div><div class="knowledge-card__content"><ul><li>Understand the practical applications of clustering analysis in different fields</li><li>Master the transformation method from business problems to clustering solutions</li><li>Learn how to interpret clustering results and extract business value</li><li>Understand the challenges and solutions of clustering analysis in real-world applications</li></ul></div></div><h2 id="customer-segmentation-case" tabindex="-1"><a class="header-anchor" href="#customer-segmentation-case"><span>Customer Segmentation Case</span></a></h2><p>Customer segmentation is one of the most common applications of clustering analysis. By dividing customers into different groups, businesses can develop targeted marketing strategies.</p><h3 id="business-background" tabindex="-1"><a class="header-anchor" href="#business-background"><span>Business Background</span></a></h3><p>An e-commerce platform wants to analyze user behavior data and segment customers into different groups for the purpose of developing differentiated marketing strategies and personalized recommendations.</p><h3 id="data-preparation" tabindex="-1"><a class="header-anchor" href="#data-preparation"><span>Data Preparation</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeans</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>decomposition <span class="token keyword">import</span> PCA</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load data</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;customer_data.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View data</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature selection</span></span>
<span class="line">features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;recency&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;frequency&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;monetary&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tenure&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span></span>
<span class="line">X <span class="token operator">=</span> df<span class="token punctuation">[</span>features<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Handle missing values</span></span>
<span class="line">X <span class="token operator">=</span> X<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>X<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature scaling</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">X_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># View feature correlation</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>df<span class="token punctuation">[</span>features<span class="token punctuation">]</span><span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;coolwarm&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Feature Correlation Matrix&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="determine-the-optimal-number-of-clusters" tabindex="-1"><a class="header-anchor" href="#determine-the-optimal-number-of-clusters"><span>Determine the Optimal Number of Clusters</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> silhouette_score</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Use the elbow method to determine the optimal K value</span></span>
<span class="line">wcss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">silhouette_scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">K_range <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> k <span class="token keyword">in</span> K_range<span class="token punctuation">:</span></span>
<span class="line">    kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>k<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">    kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_scaled<span class="token punctuation">)</span></span>
<span class="line">    wcss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Compute silhouette score</span></span>
<span class="line">    labels <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>labels_</span>
<span class="line">    silhouette_scores<span class="token punctuation">.</span>append<span class="token punctuation">(</span>silhouette_score<span class="token punctuation">(</span>X_scaled<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize elbow method</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>K_range<span class="token punctuation">,</span> wcss<span class="token punctuation">,</span> <span class="token string">&#39;o-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Number of Clusters (K)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;WCSS&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Elbow Method&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize silhouette score</span></span>
<span class="line">plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>K_range<span class="token punctuation">,</span> silhouette_scores<span class="token punctuation">,</span> <span class="token string">&#39;o-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Number of Clusters (K)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Silhouette Score&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Silhouette Method&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Choose the best K value</span></span>
<span class="line">best_k <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment"># Based on the above analysis</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="clustering-analysis" tabindex="-1"><a class="header-anchor" href="#clustering-analysis"><span>Clustering Analysis</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Perform clustering with the best K value</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>best_k<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Dimensionality reduction for visualization</span></span>
<span class="line">pca <span class="token operator">=</span> PCA<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">X_pca <span class="token operator">=</span> pca<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize clustering results</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">scatter <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X_pca<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X_pca<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Customer Segmentation Result (PCA Reduction)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span>scatter<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Cluster Label&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Analyze the cluster centers</span></span>
<span class="line">cluster_centers <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>scaler<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">)</span><span class="token punctuation">,</span> columns<span class="token operator">=</span>features<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Cluster Centers:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cluster_centers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Statistical description of each cluster</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>best_k<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\nStatistics for Cluster </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> i<span class="token punctuation">]</span><span class="token punctuation">[</span>features<span class="token punctuation">]</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="business-interpretation-and-application" tabindex="-1"><a class="header-anchor" href="#business-interpretation-and-application"><span>Business Interpretation and Application</span></a></h3><p>Based on the clustering results, we can categorize customers into the following groups:</p><div class="table-container"><table><thead><tr><th>Customer Group</th><th>Feature Description</th><th>Marketing Strategy</th></tr></thead><tbody><tr><td>High Value Loyal Customers</td><td> - High purchase frequency<br> - High spending<br> - Recently made a purchase<br> - Long customer tenure </td><td> - VIP membership program<br> - Exclusive discounts<br> - High-end product recommendations<br> - Loyalty rewards </td></tr><tr><td>Potential Customers</td><td> - Medium purchase frequency<br> - Medium spending<br> - Recently made a purchase<br> - Short customer tenure </td><td> - Membership upgrade incentives<br> - Cross-selling<br> - Personalized recommendations<br> - Time-limited discounts </td></tr><tr><td>Dormant Customers</td><td> - Low purchase frequency<br> - Medium spending<br> - No recent purchases<br> - Long customer tenure </td><td> - Re-engagement campaigns<br> - Special discounts<br> - New product notifications<br> - Feedback surveys </td></tr><tr><td>New Customers</td><td> - Low purchase frequency<br> - Low spending<br> - Recently made a purchase<br> - Short customer tenure </td><td> - Welcome gifts<br> - Entry-level product recommendations<br> - Automated marketing </td></tr></tbody></table></div><h2 id="anomaly-detection-case" tabindex="-1"><a class="header-anchor" href="#anomaly-detection-case"><span>Anomaly Detection Case</span></a></h2><p>Clustering analysis can be used to detect anomalies in data, which is especially useful in fraud detection and cybersecurity.</p><h3 id="business-background-1" tabindex="-1"><a class="header-anchor" href="#business-background-1"><span>Business Background</span></a></h3><p>A bank needs to identify potentially fraudulent transactions from a large set of transaction data.</p><h3 id="data-preparation-and-clustering" tabindex="-1"><a class="header-anchor" href="#data-preparation-and-clustering"><span>Data Preparation and Clustering</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> DBSCAN</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>decomposition <span class="token keyword">import</span> PCA</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load transaction data</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;transactions.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature selection</span></span>
<span class="line">features <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;amount&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;time_since_last_transaction&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;distance_from_home&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foreign_transaction&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;high_risk_merchant&#39;</span><span class="token punctuation">]</span></span>
<span class="line">X <span class="token operator">=</span> df<span class="token punctuation">[</span>features<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Feature scaling</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">X_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Use DBSCAN for clustering</span></span>
<span class="line">dbscan <span class="token operator">=</span> DBSCAN<span class="token punctuation">(</span>eps<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">clusters <span class="token operator">=</span> dbscan<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Add clustering results to the original data</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> clusters</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Identify anomalies (points labeled -1)</span></span>
<span class="line">outliers <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Detected </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>outliers<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> anomalous transactions&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Dimensionality reduction for visualization</span></span>
<span class="line">pca <span class="token operator">=</span> PCA<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">X_pca <span class="token operator">=</span> pca<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_scaled<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X_pca<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X_pca<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>clusters<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X_pca<span class="token punctuation">[</span>clusters <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X_pca<span class="token punctuation">[</span>clusters <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Transaction Anomaly Detection&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span>label<span class="token operator">=</span><span class="token string">&#39;Cluster Label&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Analyze features of anomalous transactions</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Feature statistics for anomalous transactions:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>outliers<span class="token punctuation">[</span>features<span class="token punctuation">]</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\nFeature statistics for normal transactions:&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>features<span class="token punctuation">]</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="business-suggestions" tabindex="-1"><a class="header-anchor" href="#business-suggestions"><span>Business Suggestions</span></a></h3><p>Based on the anomaly detection results, the following recommendations can be made:</p><ol><li><strong>Real-time monitoring system</strong>: Integrate the clustering model into a real-time transaction monitoring system.</li><li><strong>Risk scoring</strong>: Calculate an anomaly score for each transaction and trigger manual review when a threshold is exceeded.</li><li><strong>Layered defense</strong>: Combine rule-based systems and machine learning models to build a multi-layered fraud prevention system.</li><li><strong>Continuous updates</strong>: Periodically retrain the model with new data to adapt to changes in fraud patterns.</li></ol><h2 id="document-clustering-case" tabindex="-1"><a class="header-anchor" href="#document-clustering-case"><span>Document Clustering Case</span></a></h2><p>Clustering analysis can be used to organize and classify large volumes of textual documents, helping with information retrieval and topic discovery.</p><h3 id="business-background-2" tabindex="-1"><a class="header-anchor" href="#business-background-2"><span>Business Background</span></a></h3><p>A news website needs to automatically categorize a large number of news articles to better organize content and recommend related articles.</p><h3 id="text-preprocessing-and-feature-extraction" tabindex="-1"><a class="header-anchor" href="#text-preprocessing-and-feature-extraction"><span>Text Preprocessing and Feature Extraction</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">import</span> TfidfVectorizer</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeans</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>decomposition <span class="token keyword">import</span> TruncatedSVD</span>
<span class="line"><span class="token keyword">import</span> nltk</span>
<span class="line"><span class="token keyword">from</span> nltk<span class="token punctuation">.</span>corpus <span class="token keyword">import</span> stopwords</span>
<span class="line"><span class="token keyword">from</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">import</span> WordNetLemmatizer</span>
<span class="line"><span class="token keyword">import</span> re</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Download necessary NLTK resources</span></span>
<span class="line">nltk<span class="token punctuation">.</span>download<span class="token punctuation">(</span><span class="token string">&#39;stopwords&#39;</span><span class="token punctuation">)</span></span>
<span class="line">nltk<span class="token punctuation">.</span>download<span class="token punctuation">(</span><span class="token string">&#39;wordnet&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Load news data</span></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;news_articles.csv&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Text preprocessing function</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">preprocess_text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Convert to lowercase</span></span>
<span class="line">    text <span class="token operator">=</span> text<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># Remove special characters and digits</span></span>
<span class="line">    text <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;[^a-zA-Z\\s]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># Tokenize</span></span>
<span class="line">    tokens <span class="token operator">=</span> text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># Remove stopwords</span></span>
<span class="line">    stop_words <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>stopwords<span class="token punctuation">.</span>words<span class="token punctuation">(</span><span class="token string">&#39;english&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    tokens <span class="token operator">=</span> <span class="token punctuation">[</span>word <span class="token keyword">for</span> word <span class="token keyword">in</span> tokens <span class="token keyword">if</span> word <span class="token keyword">not</span> <span class="token keyword">in</span> stop_words<span class="token punctuation">]</span></span>
<span class="line">    <span class="token comment"># Lemmatize</span></span>
<span class="line">    lemmatizer <span class="token operator">=</span> WordNetLemmatizer<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    tokens <span class="token operator">=</span> <span class="token punctuation">[</span>lemmatizer<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token keyword">for</span> word <span class="token keyword">in</span> tokens<span class="token punctuation">]</span></span>
<span class="line">    <span class="token comment"># Recombine into text</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>tokens<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Apply preprocessing</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;processed_text&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>preprocess_text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Use TF-IDF for feature extraction</span></span>
<span class="line">vectorizer <span class="token operator">=</span> TfidfVectorizer<span class="token punctuation">(</span>max_features<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">X <span class="token operator">=</span> vectorizer<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;processed_text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Dimensionality reduction for visualization</span></span>
<span class="line">svd <span class="token operator">=</span> TruncatedSVD<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">X_svd <span class="token operator">=</span> svd<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Determine the best number of clusters</span></span>
<span class="line">wcss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">K_range <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> k <span class="token keyword">in</span> K_range<span class="token punctuation">:</span></span>
<span class="line">    kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>k<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">    kmeans<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line">    wcss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize elbow method</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>K_range<span class="token punctuation">,</span> wcss<span class="token punctuation">,</span> <span class="token string">&#39;o-&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Number of Clusters (K)&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;WCSS&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Elbow Method&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Choose the best K value</span></span>
<span class="line">best_k <span class="token operator">=</span> <span class="token number">5</span>  <span class="token comment"># Based on the above analysis</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="clustering-analysis-and-topic-extraction" tabindex="-1"><a class="header-anchor" href="#clustering-analysis-and-topic-extraction"><span>Clustering Analysis and Topic Extraction</span></a></h3><div class="code-example"><div class="code-example__title">Code Example</div><div class="code-example__content"><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Perform clustering with the best K value</span></span>
<span class="line">kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>best_k<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Visualize clustering results</span></span>
<span class="line">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">scatter <span class="token operator">=</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X_svd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X_svd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;viridis&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;News Article Clustering Result&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Component 1&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Component 2&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span>scatter<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Cluster Label&#39;</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Extract keywords for each cluster</span></span>
<span class="line">feature_names <span class="token operator">=</span> vectorizer<span class="token punctuation">.</span>get_feature_names_out<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">centroids <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>cluster_centers_</span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>best_k<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Get the top 10 keywords for the cluster center</span></span>
<span class="line">    top_indices <span class="token operator">=</span> centroids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    top_keywords <span class="token operator">=</span> <span class="token punctuation">[</span>feature_names<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token keyword">for</span> idx <span class="token keyword">in</span> top_indices<span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Cluster </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> Keywords: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>top_keywords<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># Display sample article titles from the cluster</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Sample articles from Cluster </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">:&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> title <span class="token keyword">in</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;cluster&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;- </span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="${ssrRenderStyle({ "counter-reset": "line-number 0" })}"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="business-applications" tabindex="-1"><a class="header-anchor" href="#business-applications"><span>Business Applications</span></a></h3><p>Based on the document clustering results, the following applications can be implemented:</p><ol><li><strong>Automatic content classification</strong>: Automatically assign new articles to relevant categories.</li><li><strong>Related article recommendation</strong>: Recommend other articles of the same category to users based on the current article.</li><li><strong>Topic discovery</strong>: Identify popular topics and emerging trends.</li><li><strong>Content organization</strong>: Optimize website navigation and content structure.</li></ol><div class="knowledge-card"><div class="knowledge-card__title"><span class="icon">⚠️</span> Common Pitfalls </div><div class="knowledge-card__content"><ul><li><strong>Ignoring business context</strong>: Clustering results must be interpreted in conjunction with business knowledge to make sense.</li><li><strong>Over-relying on automation</strong>: Clustering is a tool for assistance, not a complete substitute for human judgment.</li><li><strong>Ignoring data quality</strong>: Garbage in, garbage out—data quality is crucial for clustering results.</li><li><strong>Ignoring model updates</strong>: Customer behavior and market environments change, so clustering models need regular updates.</li></ul></div></div><h2 id="summary-and-reflection" tabindex="-1"><a class="header-anchor" href="#summary-and-reflection"><span>Summary and Reflection</span></a></h2><p>Clustering analysis has broad applications in customer segmentation, anomaly detection, and document organization. By dividing data into meaningful groups, businesses can gain valuable insights.</p><h3 id="key-takeaways" tabindex="-1"><a class="header-anchor" href="#key-takeaways"><span>Key Takeaways</span></a></h3><ul><li>Clustering analysis helps businesses discover natural groupings in data.</li><li>From business problems to clustering solutions requires proper feature selection and preprocessing.</li><li>The interpretation of clustering results must involve domain knowledge.</li><li>Clustering analysis can support personalized marketing, risk management, and more.</li></ul><h3 id="reflection-questions" tabindex="-1"><a class="header-anchor" href="#reflection-questions"><span>Reflection Questions</span></a></h3><ol><li>How can clustering results be translated into actionable business strategies?</li><li>How do you evaluate the business value of a clustering solution in practice?</li><li>How can clustering analysis be integrated with other data mining techniques?</li></ol>`);
  _push(ssrRenderComponent(_component_BackToPath, null, null, _parent));
  _push(`<div class="practice-link"><a href="/projects/clustering.html" class="button">Go to Practice Projects</a></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vuepress/.temp/pages/en/core/clustering/applications.html.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const applications_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "applications.html.vue"]]);
const data = JSON.parse('{"path":"/en/core/clustering/applications.html","title":"Clustering Practical Application Cases","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Customer Segmentation Case","slug":"customer-segmentation-case","link":"#customer-segmentation-case","children":[{"level":3,"title":"Business Background","slug":"business-background","link":"#business-background","children":[]},{"level":3,"title":"Data Preparation","slug":"data-preparation","link":"#data-preparation","children":[]},{"level":3,"title":"Determine the Optimal Number of Clusters","slug":"determine-the-optimal-number-of-clusters","link":"#determine-the-optimal-number-of-clusters","children":[]},{"level":3,"title":"Clustering Analysis","slug":"clustering-analysis","link":"#clustering-analysis","children":[]},{"level":3,"title":"Business Interpretation and Application","slug":"business-interpretation-and-application","link":"#business-interpretation-and-application","children":[]}]},{"level":2,"title":"Anomaly Detection Case","slug":"anomaly-detection-case","link":"#anomaly-detection-case","children":[{"level":3,"title":"Business Background","slug":"business-background-1","link":"#business-background-1","children":[]},{"level":3,"title":"Data Preparation and Clustering","slug":"data-preparation-and-clustering","link":"#data-preparation-and-clustering","children":[]},{"level":3,"title":"Business Suggestions","slug":"business-suggestions","link":"#business-suggestions","children":[]}]},{"level":2,"title":"Document Clustering Case","slug":"document-clustering-case","link":"#document-clustering-case","children":[{"level":3,"title":"Business Background","slug":"business-background-2","link":"#business-background-2","children":[]},{"level":3,"title":"Text Preprocessing and Feature Extraction","slug":"text-preprocessing-and-feature-extraction","link":"#text-preprocessing-and-feature-extraction","children":[]},{"level":3,"title":"Clustering Analysis and Topic Extraction","slug":"clustering-analysis-and-topic-extraction","link":"#clustering-analysis-and-topic-extraction","children":[]},{"level":3,"title":"Business Applications","slug":"business-applications","link":"#business-applications","children":[]}]},{"level":2,"title":"Summary and Reflection","slug":"summary-and-reflection","link":"#summary-and-reflection","children":[{"level":3,"title":"Key Takeaways","slug":"key-takeaways","link":"#key-takeaways","children":[]},{"level":3,"title":"Reflection Questions","slug":"reflection-questions","link":"#reflection-questions","children":[]}]}],"git":{"updatedTime":1742831857000,"contributors":[{"name":"like45599","username":"like45599","email":"131803211+like45599@users.noreply.github.com","commits":2,"url":"https://github.com/like45599"}],"changelog":[{"hash":"2bc457cfaf02a69e1673760e9106a75f7cced3da","time":1742831857000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"优化跳转地址+更新网站icon"},{"hash":"61a31e55d1325755fa12a32e909ee09c3ac0a20f","time":1742460681000,"email":"131803211+like45599@users.noreply.github.com","author":"Yun Feng","message":"数据挖掘指南v1.0"}]},"filePathRelative":"en/core/clustering/applications.md"}');
export {
  applications_html as comp,
  data
};
